version: '3.8'

services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-eve_dmv_prod}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eve_dmv_network

  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - eve_dmv_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MIX_ENV: prod
    restart: always
    ports:
      - "${PORT:-4000}:4000"  # Expose app directly, configurable port
    environment:
      MIX_ENV: prod
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      PHX_HOST: ${PHX_HOST}
      PORT: 4000
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      EVE_SSO_CLIENT_ID: ${EVE_SSO_CLIENT_ID}
      EVE_SSO_CLIENT_SECRET: ${EVE_SSO_CLIENT_SECRET}
      EVE_SSO_REDIRECT_URI: ${EVE_SSO_REDIRECT_URI}
      WANDERER_KILLS_SSE_URL: ${WANDERER_KILLS_SSE_URL:-http://wanderer-kills:4004/api/v1/kills/stream}
      WANDERER_KILLS_BASE_URL: ${WANDERER_KILLS_BASE_URL:-http://wanderer-kills:4004}
      PIPELINE_ENABLED: ${PIPELINE_ENABLED:-true}
      POOL_SIZE: ${POOL_SIZE:-10}
      JANICE_API_KEY: ${JANICE_API_KEY}
      JANICE_ENABLED: ${JANICE_ENABLED:-false}
      MUTAMARKET_API_KEY: ${MUTAMARKET_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - eve_dmv_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  eve_dmv_network:
    driver: bridge