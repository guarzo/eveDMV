Finding suitable PLTs
Checking PLT...
[:ash, :ash_authentication, :ash_authentication_phoenix, :ash_json_api, :ash_phoenix, :ash_postgres, :ash_sql, :asn1, :assent, :bandit, :bcrypt_elixir, :broadway, :bzip2, :cachex, :castore, :certifi, :comeonin, :compiler, :conv_case, :cowboy, :cowlib, :crypto, :db_connection, :decimal, :dns_cluster, :dotenvy, :ecto, :ecto_sql, :eex, :elixir, :esbuild, :eternal, :ets, :eve_dmv, :ex_hash_ring, :ex_unit, :expo, :file_system, :finch, :gen_stage, :gettext, :gun, :hackney, :hpax, :httpoison, :idna, :inets, :iterex, :jason, :joken, ...]
PLT is up to date!
No :ignore_warnings opt specified in mix.exs. Using default: .dialyzer_ignore.exs.

Starting Dialyzer
[
  check_plt: false,
  init_plt: ~c"/workspace/priv/plts/dialyzer.plt",
  files: [~c"/workspace/_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Market.RateLimiter.beam",
   ~c"/workspace/_build/dev/lib/eve_dmv/ebin/Elixir.Inspect.EveDmv.Killmails.KillmailEnriched.beam",
   ~c"/workspace/_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Database.HealthCheck.beam",
   ~c"/workspace/_build/dev/lib/eve_dmv/ebin/Elixir.Inspect.EveDmv.Intelligence.SystemInhabitant.beam",
   ~c"/workspace/_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Killmails.KillmailRaw.beam",
   ...],
  warnings: [:error_handling, :underspecs, :unknown]
]
