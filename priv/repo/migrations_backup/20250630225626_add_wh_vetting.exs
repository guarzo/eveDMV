defmodule EveDmv.Repo.Migrations.AddWhVetting do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:wh_vetting, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :character_id, :bigint, null: false
      add :character_name, :text, null: false
      add :corporation_id, :bigint
      add :corporation_name, :text
      add :alliance_id, :bigint
      add :alliance_name, :text
      add :vetting_requested_by, :bigint
      add :vetting_requested_at, :utc_datetime, default: fragment("(now() AT TIME ZONE 'utc')")
      add :last_updated_at, :utc_datetime, default: fragment("(now() AT TIME ZONE 'utc')")
      add :status, :text, default: "pending"
      add :overall_risk_score, :bigint, default: 50
      add :wh_experience_score, :bigint, default: 0
      add :competency_score, :bigint, default: 0
      add :security_score, :bigint, default: 50
      add :j_space_activity, :map, default: %{}
      add :eviction_associations, :map, default: %{}
      add :alt_analysis, :map, default: %{}
      add :competency_metrics, :map, default: %{}
      add :risk_factors, :map, default: %{}
      add :employment_history, :map, default: %{}
      add :recommendation, :text
      add :recommendation_confidence, :float, default: 0.5
      add :recruiter_notes, :text
      add :auto_generated_summary, :text
      add :requires_manual_review, :boolean, default: false
      add :data_completeness_percent, :bigint, default: 0
      add :analysis_errors, :map, default: %{}

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create index(:wh_vetting, [:employment_history],
             name: "wh_vetting_employment_history_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:risk_factors],
             name: "wh_vetting_risk_factors_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:competency_metrics],
             name: "wh_vetting_competency_metrics_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:alt_analysis],
             name: "wh_vetting_alt_analysis_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:eviction_associations],
             name: "wh_vetting_eviction_associations_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:j_space_activity],
             name: "wh_vetting_j_space_activity_gin_idx",
             using: "gin"
           )

    create index(:wh_vetting, [:inserted_at])

    create index(:wh_vetting, [:wh_experience_score])

    create index(:wh_vetting, [:overall_risk_score])

    create index(:wh_vetting, [:corporation_id])

    create index(:wh_vetting, [:character_id], unique: true)
  end

  def down do
    drop_if_exists index(:wh_vetting, [:character_id])

    drop_if_exists index(:wh_vetting, [:corporation_id])

    drop_if_exists index(:wh_vetting, [:overall_risk_score])

    drop_if_exists index(:wh_vetting, [:wh_experience_score])

    drop_if_exists index(:wh_vetting, [:inserted_at])

    drop_if_exists index(:wh_vetting, [:j_space_activity],
                     name: "wh_vetting_j_space_activity_gin_idx"
                   )

    drop_if_exists index(:wh_vetting, [:eviction_associations],
                     name: "wh_vetting_eviction_associations_gin_idx"
                   )

    drop_if_exists index(:wh_vetting, [:alt_analysis], name: "wh_vetting_alt_analysis_gin_idx")

    drop_if_exists index(:wh_vetting, [:competency_metrics],
                     name: "wh_vetting_competency_metrics_gin_idx"
                   )

    drop_if_exists index(:wh_vetting, [:risk_factors], name: "wh_vetting_risk_factors_gin_idx")

    drop_if_exists index(:wh_vetting, [:employment_history],
                     name: "wh_vetting_employment_history_gin_idx"
                   )

    drop table(:wh_vetting)
  end
end
