defmodule EveDmv.Repo.Migrations.AddSurveillanceTables do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:surveillance_profiles, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :description, :text
      add :user_id, :uuid, null: false
      add :is_active, :boolean, null: false, default: true
      add :filter_tree, :map, null: false
      add :notification_settings, :map, null: false
      add :match_count, :bigint, null: false, default: 0
      add :last_match_at, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create index(:surveillance_profiles, [:user_id, :is_active],
             name: "surveillance_profiles_user_active_idx"
           )

    create index(:surveillance_profiles, [:is_active], name: "surveillance_profiles_active_idx")

    create index(:surveillance_profiles, [:user_id], name: "surveillance_profiles_user_idx")

    create table(:surveillance_profile_matches, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :profile_id,
          references(:surveillance_profiles,
            column: :id,
            name: "surveillance_profile_matches_profile_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :killmail_id, :bigint, null: false
      add :killmail_time, :utc_datetime, null: false
      add :matched_at, :utc_datetime, null: false, default: fragment("(now() AT TIME ZONE 'utc')")
      add :match_conditions, :map
      add :victim_character_name, :text
      add :victim_ship_name, :text
      add :solar_system_name, :text
      add :total_value, :decimal, precision: 15, scale: 2

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create index(:surveillance_profile_matches, [:profile_id, :matched_at],
             name: "profile_matches_profile_time_idx"
           )

    create index(:surveillance_profile_matches, [:matched_at], name: "profile_matches_time_idx")

    create index(:surveillance_profile_matches, [:killmail_id, :killmail_time],
             name: "profile_matches_killmail_idx"
           )

    create index(:surveillance_profile_matches, [:profile_id],
             name: "profile_matches_profile_idx"
           )
  end

  def down do
    drop constraint(:surveillance_profile_matches, "surveillance_profile_matches_profile_id_fkey")

    drop_if_exists index(:surveillance_profile_matches, [:profile_id],
                     name: "profile_matches_profile_idx"
                   )

    drop_if_exists index(:surveillance_profile_matches, [:killmail_id, :killmail_time],
                     name: "profile_matches_killmail_idx"
                   )

    drop_if_exists index(:surveillance_profile_matches, [:matched_at],
                     name: "profile_matches_time_idx"
                   )

    drop_if_exists index(:surveillance_profile_matches, [:profile_id, :matched_at],
                     name: "profile_matches_profile_time_idx"
                   )

    drop table(:surveillance_profile_matches)

    drop_if_exists index(:surveillance_profiles, [:user_id],
                     name: "surveillance_profiles_user_idx"
                   )

    drop_if_exists index(:surveillance_profiles, [:is_active],
                     name: "surveillance_profiles_active_idx"
                   )

    drop_if_exists index(:surveillance_profiles, [:user_id, :is_active],
                     name: "surveillance_profiles_user_active_idx"
                   )

    drop table(:surveillance_profiles)
  end
end
