defmodule EveDmv.Repo.Migrations.AddSolarSystems do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:eve_solar_systems, primary_key: false) do
      add :system_id, :bigint, null: false, primary_key: true
      add :system_name, :text, null: false
      add :region_id, :bigint
      add :region_name, :text
      add :constellation_id, :bigint
      add :constellation_name, :text
      add :security_status, :decimal, precision: 10, scale: 6
      add :security_class, :text
      add :x, :decimal, precision: 20, scale: 6
      add :y, :decimal, precision: 20, scale: 6
      add :z, :decimal, precision: 20, scale: 6
      add :sde_version, :text
      add :last_updated, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create index(:eve_solar_systems, ["system_name gin_trgm_ops"],
             name: "eve_solar_systems_name_trgm_idx",
             using: "gin"
           )

    create index(:eve_solar_systems, [:security_status], name: "eve_solar_systems_security_idx")

    create index(:eve_solar_systems, [:constellation_id],
             name: "eve_solar_systems_constellation_idx"
           )

    create index(:eve_solar_systems, [:region_id], name: "eve_solar_systems_region_idx")

    create index(:eve_solar_systems, [:system_name], name: "eve_solar_systems_name_idx")

    create unique_index(:eve_solar_systems, [:system_id],
             name: "eve_solar_systems_system_id_index"
           )
  end

  def down do
    drop_if_exists unique_index(:eve_solar_systems, [:system_id],
                     name: "eve_solar_systems_system_id_index"
                   )

    drop_if_exists index(:eve_solar_systems, [:system_name], name: "eve_solar_systems_name_idx")

    drop_if_exists index(:eve_solar_systems, [:region_id], name: "eve_solar_systems_region_idx")

    drop_if_exists index(:eve_solar_systems, [:constellation_id],
                     name: "eve_solar_systems_constellation_idx"
                   )

    drop_if_exists index(:eve_solar_systems, [:security_status],
                     name: "eve_solar_systems_security_idx"
                   )

    drop_if_exists index(:eve_solar_systems, ["system_name gin_trgm_ops"],
                     name: "eve_solar_systems_name_trgm_idx"
                   )

    drop table(:eve_solar_systems)
  end
end
