Finding suitable PLTs
Checking PLT...
[:ash, :ash_authentication, :ash_authentication_phoenix, :ash_json_api, :ash_phoenix, :ash_postgres, :ash_sql, :asn1, :assent, :bandit, :bcrypt_elixir, :broadway, :bzip2, :cachex, :castore, :certifi, :comeonin, :compiler, :conv_case, :cowboy, :cowlib, :crypto, :db_connection, :decimal, :dns_cluster, :dotenvy, :ecto, :ecto_sql, :eex, :elixir, :esbuild, :eternal, :ets, :eve_dmv, :ex_hash_ring, :ex_unit, :expo, :exsync, :file_system, :finch, :gen_stage, :gettext, :gun, :hackney, :hpax, :httpoison, :idna, :inets, :iterex, :jason, ...]
PLT is up to date!
ignore_warnings: .dialyzer_ignore.exs

Starting Dialyzer
[
  check_plt: false,
  init_plt: ~c"/workspace/priv/plts/dialyzer.plt",
  files: [~c"_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Market.RateLimiter.beam",
   ~c"_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Contexts.MarketIntelligence.Api.beam",
   ~c"_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Intelligence.ThreatAssessment.beam",
   ~c"_build/dev/lib/eve_dmv/ebin/Elixir.EveDmv.Intelligence.Analyzers.FleetAssetManager.ReadinessAnalyzer.beam",
   ~c"_build/dev/lib/eve_dmv/ebin/Elixir.Inspect.EveDmv.Intelligence.Wormhole.FleetComposition.beam",
   ...],
  warnings: [:error_handling, :underspecs, :unknown]
]
Total errors: 655, Skipped: 103, Unnecessary Skips: 0
done in 0m58.31s
lib/eve_dmv/analytics/player_stats_engine.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/battle_detection_service.ex:438:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :destroyed_value => number(),
  :dropped_value => number(),
  :fitted_value => number(),
  :price_source => _,
  :ship_value => number(),
  :total_value => number()
}.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/battle_metrics_calculator.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/battle_metrics_calculator.ex:345:pattern_match_cov
The pattern
%{:total_value => _}

can never match, because previous clauses completely cover the type
%{
  :destroyed_value => number(),
  :dropped_value => number(),
  :fitted_value => number(),
  :price_source => _,
  :ship_value => number(),
  :total_value => number()
}.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/combat_log_parser.ex:242:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %NaiveDateTime{
     :calendar => atom(),
     :day => pos_integer(),
     :hour => non_neg_integer(),
     :microsecond => {non_neg_integer(), non_neg_integer()},
     :minute => non_neg_integer(),
     :month => pos_integer(),
     :second => non_neg_integer(),
     :year => integer()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/enhanced_combat_log_parser.ex:529:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %NaiveDateTime{
     :calendar => atom(),
     :day => pos_integer(),
     :hour => non_neg_integer(),
     :microsecond => {non_neg_integer(), non_neg_integer()},
     :minute => non_neg_integer(),
     :month => pos_integer(),
     :second => non_neg_integer(),
     :year => integer()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/domain/multi_system_battle_correlator.ex:60:guard_fail
The guard test:

is_map(_b :: maybe_improper_list())

can never succeed.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/extractors/ship_instance_extractor.ex:265:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _name}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/services/combat_log_service.ex:41:apply
Function application with arguments (_ :: :error) will never return since the 1st arguments differ
from the success typing arguments:

({:error, _})

________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/services/combat_log_service.ex:68:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :events => [any()],
     :metadata => map(),
     :recommendations => [any()],
     :summary => map(),
     :tactical_analysis => map()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/battle_analysis/services/combat_log_service.ex:76:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
:error

________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing.ex:68:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type

  {:ok,
   %{:creator_id => 12345, :metadata => %{}, :report_id => <<_::56>>, :title => <<_::112>>}}
.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing.ex:80:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type
{:ok, []}.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing.ex:97:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type
{:ok, []}.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing/domain/tactical_highlight_manager.ex:424:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :contextual_factors => [
       :battle_conclusion | :battle_opening | :intensity_change | :phase_transition
     ],
     :killmails_nearby => non_neg_integer(),
     :significance_score => float(),
     :tactical_situation => %{
       :intensity => :high | :low | :medium | :none | :very_high,
       :killmail_count => non_neg_integer(),
       :participant_count => non_neg_integer(),
       :ship_diversity => float(),
       :type =>
         :capital_engagement
         | :focused_engagement
         | :mixed_engagement
         | :positioning
         | :standard_engagement
     },
     :timestamp => _
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing/domain/video_link_validator.ex:333:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :category => nil | <<_::48>>,
     :channel_id => nil,
     :channel_name => nil,
     :content_rating => nil,
     :description => <<_::64, _::size(8)>>,
     :duration => nil,
     :language => nil,
     :privacy_status => :unknown,
     :tags => [],
     :thumbnail_url => nil | binary(),
     :title => <<_::56, _::size(8)>>,
     :upload_date => nil,
     :view_count => nil
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing/domain/video_link_validator.ex:441:unused_fun
Function create_fallback_metadata/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing/domain/video_link_validator.ex:528:pattern_match_cov
The pattern
{:error, _reason}

can never match, because previous clauses completely cover the type

  {:error, :content_violation}
  | {:ok,
     %{
       :moderation => map(),
       :normalized_url => binary(),
       :original_url => binary(),
       :platform => _,
       :platform_name => _,
       :validated_at => map(),
       :validation_status => :validated,
       :video_id => _,
       :embed => map(),
       :metadata => map()
     }}
.

________________________________________________________________________________
lib/eve_dmv/contexts/battle_sharing/domain/video_link_validator.ex:596:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, :accessible}

________________________________________________________________________________
lib/eve_dmv/contexts/character_intelligence.ex:109:pattern_match
The pattern can never match the type.

Pattern:
{:error, :insufficient_data}

Type:

  {:ok,
   %{
     :character_id => _,
     :improvement_rate => float(),
     :predictions => [any(), ...],
     :trend_data => [any()],
     :trend_direction =>
       :declining
       | :improving
       | :insufficient_data
       | :stable
       | :strongly_declining
       | :strongly_improving,
     :volatility => float()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/character_intelligence.ex:125:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type

  {:ok,
   %{
     :character_id => _,
     :improvement_rate => float(),
     :predictions => [any(), ...],
     :trend_data => [any()],
     :trend_direction =>
       :declining
       | :improving
       | :insufficient_data
       | :stable
       | :strongly_declining
       | :strongly_improving,
     :volatility => float()
   }}
.

________________________________________________________________________________
lib/eve_dmv/contexts/character_intelligence.ex:177:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type

  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}
.

________________________________________________________________________________
lib/eve_dmv/contexts/character_intelligence.ex:224:pattern_match
The pattern can never match the type.

Pattern:
{:error, __reason}

Type:

  {:ok,
   %{
     :analysis_period_days => number(),
     :calculated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :expertise_level => :beginner | :competent | :experienced | :expert | :novice,
     :preferred_roles => [any()],
     :ship_mastery => _,
     :specializations => map(),
     :total_killmails => non_neg_integer(),
     :note => <<_::240>>
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/character_intelligence.ex:259:guard_fail
The guard clause:

when _ :: non_neg_integer() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence.ex:91:call
The function call will not succeed.

EveDmv.Contexts.CombatIntelligence.bulk_analyze_characters(_ :: any(), [])

will never return since the 2nd arguments differ
from the success typing arguments:

([integer()], map())

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence.ex:91:no_return
Function bulk_analyze_characters/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/battle_analysis/extractors/killmail_extractor.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/character_analyzer.ex:103:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, map()}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/character_analyzer.ex:171:pattern_match_cov
The pattern
{:error, _reason}

can never match, because previous clauses completely cover the type
{:error, :not_found} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/corporation_analyzer.ex:83:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, map()}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/corporation_analyzer.ex:126:pattern_match_cov
The pattern
{:error, _reason}

can never match, because previous clauses completely cover the type
{:error, :not_found} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:42:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _scores}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:43:pattern_match
The pattern can never match the type.

Pattern:
{:error, :not_found}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:123:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, %{:confidence => :low, :rating => 0, :reason => <<_::120>>, :score => float()}}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:133:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{:confidence => :low, :rating => :unknown, :reason => <<_::120>>, :score => float()}}


________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:143:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{:confidence => :low, :rating => :unknown, :reason => <<_::120>>, :score => float()}}


________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:153:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{:confidence => :low, :rating => :unknown, :reason => <<_::120>>, :score => float()}}


________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:163:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{:confidence => :low, :rating => :unknown, :reason => <<_::120>>, :score => float()}}


________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/intelligence_scoring.ex:171:pattern_match
The pattern can never match the type.

Pattern:
{:error, :not_implemented}

Type:
{:error, :not_found} | {:ok, map()}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/threat_assessor.ex:83:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, map()}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/domain/threat_assessor.ex:140:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, map()}

________________________________________________________________________________
lib/eve_dmv/contexts/combat_intelligence/infrastructure/analysis_cache.ex:133:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.CombatIntelligence.Infrastructure.AnalysisCache.get_intelligence_scores/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/analyzers/participation_analyzer.ex:149:pattern_match
The pattern can never match the type.

Pattern:
_error = {:error, __reason}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/analyzers/participation_analyzer.ex:724:pattern_match
The pattern can never match the type.

Pattern:
:none

Type:
:advanced | :beginner | :expert | :intermediate | :novice

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/domain/corporation_analyzer.ex:320:call
The function call will not succeed.

EveDmv.Result.error(
  :health_calculation_failed,
  _reason :: %EveDmv.Error{
    :code => atom(),
    :context => map(),
    :details => map(),
    :message => binary(),
    :stacktrace => nil | [any()]
  }
)

will never return since the 2nd arguments differ
from the success typing arguments:

(atom(), binary())

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/infrastructure/corporation_repository.ex:276:call
The function call will not succeed.

Decimal.to_float(_ratio :: number())

will never return since the success typing is:
(%Decimal{:coef => integer(), :exp => number(), :sign => _, _ => _}) :: float()

and the contract is
(t()) :: float()

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/infrastructure/corporation_repository.ex:299:call
The function call will not succeed.

Decimal.to_float(_avg_size :: number())

will never return since the success typing is:
(%Decimal{:coef => integer(), :exp => number(), :sign => _, _ => _}) :: float()

and the contract is
(t()) :: float()

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/infrastructure/participation_data_provider.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.CorporationAnalysis.Infrastructure.ParticipationDataProvider.get_participation_data/3

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :activity_score => float(),
     :engagement_rate => float(),
     :fleet_participations => 0,
     :operation_participations => 0,
     :preferred_timezones => []
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/infrastructure/participation_data_provider.ex:28:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.CorporationAnalysis.Infrastructure.ParticipationDataProvider.get_corporation_member_participations/3

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_analysis/infrastructure/participation_data_provider.ex:37:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.CorporationAnalysis.Infrastructure.ParticipationDataProvider.get_corporation_members/1

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_intelligence.ex:647:guard_fail
The guard clause:

when _ :: binary() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_intelligence.ex:803:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/corporation_intelligence.ex:804:call
The function call will not succeed.

DateTime.add(
  %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  number(),
  :month
)

will never return since the 3rd arguments differ
from the success typing arguments:

(
  %{
    :calendar => atom(),
    :day => _,
    :hour => _,
    :microsecond => {_, _},
    :minute => _,
    :month => _,
    :second => _,
    :std_offset => number(),
    :time_zone => _,
    :utc_offset => number(),
    :year => _,
    _ => _
  },
  integer(),
  :day
  | :hour
  | :microsecond
  | :millisecond
  | :minute
  | :nanosecond
  | :second
  | pos_integer()
)

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_intelligence.ex:805:call
The function call will not succeed.

DateTime.add(
  %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  number(),
  :month
)

will never return since the 3rd arguments differ
from the success typing arguments:

(
  %{
    :calendar => atom(),
    :day => _,
    :hour => _,
    :microsecond => {_, _},
    :minute => _,
    :month => _,
    :second => _,
    :std_offset => number(),
    :time_zone => _,
    :utc_offset => number(),
    :year => _,
    _ => _
  },
  integer(),
  :day
  | :hour
  | :microsecond
  | :millisecond
  | :minute
  | :nanosecond
  | :second
  | pos_integer()
)

________________________________________________________________________________
lib/eve_dmv/contexts/corporation_intelligence/domain/combat_doctrine_analyzer.ex:232:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
{:ok, %{:historical_analysis => <<_::184>>}}.

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/analyzers/composition_analyzer.ex:192:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _role, _confidence}

Type:
{:error, :analysis_failed | :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/analyzers/composition_analyzer.ex:1140:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
number().

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/analyzers/pilot_analyzer.ex:107:pattern_match
The pattern can never match the type.

Pattern:
_error = {:error, __reason}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:243:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :compliance_level => :acceptable | :critical | :excellent | :good | :poor,
     :compliance_score => float(),
     :doctrine_name => _,
     :issues => _,
     :participants_count => non_neg_integer(),
     :recommendations => _,
     :role_compliance => %{
       :actual_roles => _,
       :issues => _,
       :required_roles => _,
       :score => float()
     },
     :ship_compliance => %{
       :actual_ships => _,
       :issues => [any()],
       :required_ships => _,
       :score => float()
     }
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:254:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :doctrine_name => _,
     :fleet_size => non_neg_integer(),
     :overall_status => :fail | :pass,
     :validated_at => map(),
     :validation_checks => [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:301:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 0, :last => 2, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:302:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 3, :last => 4, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:303:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 5, :last => 6, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:312:pattern_match
The pattern can never match the type.

Pattern:
:frigate

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:313:pattern_match
The pattern can never match the type.

Pattern:
:destroyer

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:314:pattern_match
The pattern can never match the type.

Pattern:
:cruiser

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:462:pattern_match
The pattern can never match the type.

Pattern:
:frigate

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:466:pattern_match
The pattern can never match the type.

Pattern:
:destroyer

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/doctrine_manager.ex:469:pattern_match
The pattern can never match the type.

Pattern:
:cruiser

Type:
:battlecruiser | :battleship | :capital

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:29:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _engagements}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:46:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _engagements}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:106:unused_fun
Function calculate_effectiveness_from_engagements/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:152:unused_fun
Function aggregate_engagement_metrics/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:186:unused_fun
Function calculate_isk_efficiency_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:199:unused_fun
Function calculate_kd_ratio_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:210:unused_fun
Function calculate_survival_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:219:unused_fun
Function calculate_objective_completion_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:229:unused_fun
Function calculate_tactical_execution_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:263:unused_fun
Function calculate_trend_analysis/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:497:unused_fun
Function determine_data_period/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:512:unused_fun
Function determine_effectiveness_grade/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:533:unused_fun
Function generate_effectiveness_recommendations/5 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:580:unused_fun
Function group_engagements_by_time/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:602:unused_fun
Function calculate_trend_directions/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:625:unused_fun
Function calculate_metric_trend/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:636:unused_fun
Function calculate_overall_improvement_trend/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:660:unused_fun
Function generate_trend_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:762:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 0, :last => 2, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:763:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 3, :last => 4, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:764:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 5, :last => 6, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/effectiveness_calculator.ex:840:exact_eq
The test :capital | :command | :dps == :logistics can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:135:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :analysis_timestamp => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :composition_breakdown => %{
       :diversity_score => number(),
       :ship_classes => map(),
       :total_ships => non_neg_integer()
     },
     :composition_score => float(),
     :effectiveness_score => float(),
     :mass_analysis => float(),
     :participant_count => non_neg_integer(),
     :role_distribution => %{
       :missing_essential_roles => [any()],
       :role_balance_score => float(),
       :role_distribution => map(),
       :total_participants => non_neg_integer()
     }
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:162:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :analysis_timestamp => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :engagement_id => _,
     :engagement_outcome =>
       :decisive_defeat | :decisive_victory | :defeat | :stalemate | :victory,
     :friendly_fleet => %{:participants => [any()], :performance => map()},
     :hostile_fleet => %{:participants => [any()], :performance => map()},
     :key_factors => [map()],
     :tactical_analysis => %{
       :engagement_summary => <<_::64, _::size(8)>>,
       :improvement_areas => [any()],
       :lessons_learned => [any()],
       :tactical_recommendations => [any(), ...]
     }
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:174:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :mass_distribution => map(),
     :mass_efficiency_score => float(),
     :total_mass_kg => float(),
     :wormhole_compatibility => _
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:192:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :improvement_score => float(),
     :priority_recommendations => [any()],
     :recommendations => [any(), ...]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:203:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :doctrine_compliance => float(),
     :effectiveness_score => float(),
     :mass_total => number(),
     :pilot_count => _,
     :role_allocation => map(),
     :ship_allocation => map()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:211:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _engagement_data}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/domain/fleet_analyzer.ex:1138:guard_fail
The guard clause:

when _ :: true === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/infrastructure/fleet_repository.ex:14:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.FleetOperations.Infrastructure.FleetRepository.refresh_doctrine_cache/0

Extra type:
{:error, _}

Success typing:
:ok

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/infrastructure/killmail_fleet_processor.ex:15:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.FleetOperations.Infrastructure.KillmailFleetProcessor.process_for_fleet_analysis/1

Extra type:
{:error, _}

Success typing:
:ok

________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/infrastructure/pilot_data_provider.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.FleetOperations.Infrastructure.PilotDataProvider.get_pilot_data/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :alliance_id => nil,
     :corporation_id => 0,
     :experience_level => :unknown,
     :name => <<_::104>>,
     :pilot_id => 0,
     :preferred_roles => [],
     :skills => %{}
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/infrastructure/pilot_data_provider.ex:29:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.FleetOperations.Infrastructure.PilotDataProvider.get_combat_statistics/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :damage_dealt => 0,
     :damage_taken => 0,
     :deaths => 0,
     :efficiency => float(),
     :isk_destroyed => 0,
     :isk_lost => 0,
     :kills => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/fleet_operations/infrastructure/pilot_data_provider.ex:46:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.FleetOperations.Infrastructure.PilotDataProvider.get_corporation_pilots/1

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:141:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _system_activities}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:216:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _raw_intelligence}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:282:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _historical_data}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:347:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _baseline_intelligence}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:700:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:701:call
The function call will not succeed.

Time.truncate(
  %Time{
    :calendar => atom(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :second => non_neg_integer()
  },
  :hour
)

will never return since the success typing is:
(
  %Time{:microsecond => {non_neg_integer(), non_neg_integer()}, _ => _},
  :microsecond | :millisecond | :second
) :: %Time{:microsecond => {non_neg_integer(), non_neg_integer()}, _ => _}

and the contract is
(t(), :microsecond | :millisecond | :second) :: t()

________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1663:unused_fun
Function analyze_temporal_correlations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1667:unused_fun
Function maybe_track_pilot_movements/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1671:unused_fun
Function maybe_analyze_corp_activities/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1675:unused_fun
Function identify_correlation_patterns/4 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1684:unused_fun
Function assess_strategic_implications/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1688:unused_fun
Function compile_correlation_analysis/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1696:unused_fun
Function process_intelligence_sources/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1700:unused_fun
Function maybe_apply_temporal_correlation/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1704:unused_fun
Function maybe_apply_priority_weighting/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1708:unused_fun
Function perform_intelligence_fusion/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1712:unused_fun
Function assess_intelligence_confidence/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1716:unused_fun
Function compile_intelligence_report/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1724:unused_fun
Function analyze_strategic_patterns_in_data/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1728:unused_fun
Function perform_threat_assessment/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1732:unused_fun
Function identify_strategic_opportunities/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1736:unused_fun
Function maybe_generate_strategic_predictions/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1740:unused_fun
Function generate_strategic_recommendations/4 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1749:unused_fun
Function compile_strategic_analysis/6 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1764:unused_fun
Function setup_intelligence_monitoring/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1768:unused_fun
Function maybe_setup_predictive_monitoring/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/intelligence_infrastructure/domain/cross_system_analyzer.ex:1772:unused_fun
Function start_intelligence_stream/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/api.ex:80:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.KillmailProcessing.Api.get_killmail_by_id/1

Success typing:
@spec get_killmail_by_id(integer()) :: EveDmv.Result.t(map()) | EveDmv.Result.t(:not_found)

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/enrichment_service.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.KillmailProcessing.Domain.EnrichmentService.enrich_killmail/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :character_names => %{},
     :corporation_names => %{},
     :enriched_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :killmail_id => _,
     :location_info => %{},
     :ship_types => %{},
     :valuations => %{}
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/ingestion_service.ex:184:pattern_match
The pattern can never match the type.

Pattern:
:ok

Type:
{:ok, non_neg_integer()}

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/ingestion_service.ex:253:pattern_match
The pattern can never match the type.

Pattern:
{:validation_error, _}

Type:
{:validation_failed, <<_::64, _::size(8)>>}

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/ingestion_service.ex:254:pattern_match
The pattern can never match the type.

Pattern:
{:enrichment_error, _}

Type:
{:validation_failed, <<_::64, _::size(8)>>}

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/ingestion_service.ex:255:pattern_match
The pattern can never match the type.

Pattern:
{:storage_error, _}

Type:
{:validation_failed, <<_::64, _::size(8)>>}

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/killmail_orchestrator.ex:81:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type
{:ok, :mock_pipeline_pid}.

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/killmail_orchestrator.ex:103:pattern_match_cov
The pattern
variable_error

can never match, because previous clauses completely cover the type
:ok.

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/killmail_orchestrator.ex:166:pattern_match_cov
The pattern
{_error, _new_state}

can never match, because previous clauses completely cover the type

  {:ok,
   %{
     :enriched_stored => true,
     :indexes_updated => true,
     :killmail_id => _,
     :raw_stored => true,
     :stored_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     }
   }}
.

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/domain/storage_service.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.KillmailProcessing.Domain.StorageService.store_killmail/2

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :enriched_stored => true,
     :indexes_updated => true,
     :killmail_id => _,
     :raw_stored => true,
     :stored_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     }
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/infrastructure/event_publisher.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.KillmailProcessing.Infrastructure.EventPublisher.publish_events/1

Extra type:
{:error, _}

Success typing:
{:ok, non_neg_integer()}

________________________________________________________________________________
lib/eve_dmv/contexts/killmail_processing/infrastructure/event_publisher.ex:26:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.KillmailProcessing.Infrastructure.EventPublisher.publish_event/1

Extra type:
{:error, _}

Success typing:
:ok

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/api.ex:71:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.MarketIntelligence.Api.calculate_killmail_value/1

Success typing:
@spec calculate_killmail_value(map()) ::
  EveDmv.Result.t(%{
    :total_value => float(),
    :ship_value => float(),
    :modules_value => float(),
    :cargo_value => float(),
    :implants_value => float(),
    :breakdown => [
      %{
        :type_id => type_id(),
        :quantity => integer(),
        :unit_price => float(),
        :total_price => float()
      }
    ]
  })

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/api.ex:99:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.MarketIntelligence.Api.calculate_fleet_value/1

Success typing:
@spec calculate_fleet_value([map()]) ::
  EveDmv.Result.t(%{
    :total_value => float(),
    :ship_count => integer(),
    :average_ship_value => float(),
    :value_by_ship_class => %{},
    :breakdown => [
      %{:ship_type_id => type_id(), :fit_value => float(), :count => integer()}
    ]
  })

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/api.ex:119:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.MarketIntelligence.Api.analyze_market_trends/2

Success typing:
@spec analyze_market_trends([type_id()], period :: :day | :week | :month) ::
  EveDmv.Result.t(%{
    :period => atom(),
    :trends => [
      %{
        :type_id => type_id(),
        :price_change_percent => float(),
        :volume_change_percent => float(),
        :trend_direction => :increasing | :decreasing | :stable,
        :anomalies => [map()]
      }
    ]
  })

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/market_analyzer.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.MarketIntelligence.Domain.MarketAnalyzer.analyze_trends/2

Extra type:
{:error, _}

Success typing:
{:ok, %{:analysis => %{}, :recommendations => [], :trends => []}}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:146:pattern_match
The pattern can never match the type.

Pattern:
:miss

Type:
{:error, :not_found}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:158:pattern_match
The pattern can never match the type.

Pattern:
:miss

Type:
{:error, :not_found}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:193:pattern_match
The pattern can never match the type.

Pattern:
{:ok, __prices}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:200:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _price_data}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:231:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _prices}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/price_service.ex:307:unused_fun
Function generate_analysis_id/0 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/valuation_service.ex:68:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.MarketIntelligence.Domain.ValuationService.calculate_killmail_value/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :calculated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :cargo_value => number(),
     :destroyed_value => number(),
     :dropped_value => number(),
     :killmail_id => _,
     :ship_value => number(),
     :total_value => number()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/domain/valuation_service.ex:99:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.MarketIntelligence.Domain.ValuationService.calculate_fleet_value/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :average_ship_value => float(),
     :calculated_at => map(),
     :ship_values => [any()],
     :total_ships => number(),
     :total_value => number(),
     :value_by_class => map()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/infrastructure/external_price_client.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.MarketIntelligence.Infrastructure.ExternalPriceClient.get_price/2

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/infrastructure/external_price_client.ex:20:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.MarketIntelligence.Infrastructure.ExternalPriceClient.get_prices/2

Extra type:
{:ok, %{integer() => map()}}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/market_intelligence/infrastructure/price_cache.ex:75:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.MarketIntelligence.Infrastructure.PriceCache.stats/0

Success typing:
@spec stats() :: %{:size => non_neg_integer(), :memory_bytes => non_neg_integer()}

________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:639:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:672:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:700:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:762:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:809:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:850:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:884:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:914:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:943:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:969:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:999:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:1044:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:1084:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:1174:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:1190:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/behavioral_patterns_analyzer.ex:1223:exact_eq
The test map() == nil can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/combat_stats_analyzer.ex:429:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:55:unused_fun
Function analyze_fitting_patterns/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:93:unused_fun
Function analyze_deployment_patterns/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:112:unused_fun
Function analyze_ship_values/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:143:unused_fun
Function analyze_meta_usage/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:182:unused_fun
Function analyze_ship_progression/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:205:unused_fun
Function generate_preferences_summary/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:222:unused_fun
Function calculate_diversity_metrics/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:236:unused_fun
Function calculate_specialization_metrics/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:256:unused_fun
Function calculate_ship_diversity_index/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:291:unused_fun
Function categorize_ship_role/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:297:unused_fun
Function determine_fitting_philosophy/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:298:unused_fun
Function analyze_meta_preferences/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:299:unused_fun
Function assess_bling_usage/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:300:unused_fun
Function assess_fitting_creativity/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:302:unused_fun
Function analyze_deployment_contexts/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:313:unused_fun
Function analyze_security_deployment/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:324:unused_fun
Function identify_home_system_usage/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:325:unused_fun
Function analyze_roaming_with_ships/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:326:unused_fun
Function analyze_ship_rotation/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:329:unused_fun
Function categorize_ship_values/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:334:unused_fun
Function determine_risk_comfort/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:339:unused_fun
Function calculate_bling_ratio/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:344:unused_fun
Function determine_tech_level/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:348:unused_fun
Function assess_meta_progression/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:351:unused_fun
Function determine_ship_size/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:356:unused_fun
Function flies_capitals?/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:360:unused_fun
Function determine_subcap_focus/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:361:unused_fun
Function assess_progression_stage/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:364:unused_fun
Function get_most_used_ship/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:368:unused_fun
Function determine_ship_philosophy/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:369:unused_fun
Function determine_pilot_archetype/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:370:unused_fun
Function identify_ship_strengths/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:371:unused_fun
Function identify_ship_weaknesses/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:372:unused_fun
Function generate_ship_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:374:unused_fun
Function classify_diversity_level/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:384:unused_fun
Function balance_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:391:unused_fun
Function calculate_specialization_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:401:unused_fun
Function classify_specialization_level/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:411:unused_fun
Function calculate_top_ship_dominance/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/analyzers/ship_preferences_analyzer.ex:427:unused_fun
Function calculate_role_focus_strength/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:201:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _analysis}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:220:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _analysis}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:245:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _ship_prefs}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:274:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :alliance_id => nil,
     :character_id => 0,
     :corporation_id => 0,
     :created_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :last_seen => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :name => <<_::136>>
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:291:unused_fun
Function determine_archetype/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:318:unused_fun
Function calculate_risk_profile/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:326:unused_fun
Function generate_recommendations/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:392:pattern_match
The pattern can never match the type.

Pattern:
:cache_miss

Type:
:batch_analysis

________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:419:unused_fun
Function calculate_overall_risk/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:423:unused_fun
Function identify_risk_factors/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:450:unused_fun
Function generate_risk_mitigation/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/domain/player_analyzer.ex:460:unused_fun
Function classify_archetype/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/infrastructure/player_repository.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.PlayerProfile.Infrastructure.PlayerRepository.get_player_data/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :alliance_id => nil,
     :character_id => 0,
     :corporation_id => 0,
     :created_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :last_seen => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :name => <<_::136>>
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/infrastructure/player_repository.ex:28:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.PlayerProfile.Infrastructure.PlayerRepository.get_killmail_stats/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :favorite_ships => [],
     :isk_destroyed => 0,
     :isk_lost => 0,
     :security_preference => :unknown,
     :total_deaths => 0,
     :total_kills => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/infrastructure/player_repository.ex:44:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.PlayerProfile.Infrastructure.PlayerRepository.get_activity_data/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :activity_patterns => %{},
     :engagement_frequency => float(),
     :last_activity => nil,
     :timezone_preference => nil,
     :total_activity_days => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/player_profile/infrastructure/player_repository.ex:59:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.PlayerProfile.Infrastructure.PlayerRepository.get_corporation_history/1

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_activity_tracker.ex:91:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, %{:daily_patterns => %{}, :hourly_distribution => %{}, :threat_patterns => %{}}}

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_helper.ex:314:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
[any()].

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:242:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, [any()]}

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:269:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, [any()]}

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:478:pattern_match
The pattern can never match the type.

Pattern:
_threat_result = %{:threat_level => _threat_level}

Type:

  {:error, :analysis_failed}
  | {:ok,
     %{
       :analysis_time => %DateTime{
         :calendar => atom(),
         :day => pos_integer(),
         :hour => non_neg_integer(),
         :microsecond => {_, _},
         :minute => non_neg_integer(),
         :month => pos_integer(),
         :second => non_neg_integer(),
         :std_offset => integer(),
         :time_zone => binary(),
         :utc_offset => integer(),
         :year => integer(),
         :zone_abbr => binary()
       },
       :hostile_count => non_neg_integer(),
       :hostile_inhabitants => [any()],
       :inhabitant_count => non_neg_integer(),
       :map_id => _,
       :recent_kills => non_neg_integer(),
       :risk_factors => %{
         :escalation_potential => float(),
         :evacuation_difficulty => float(),
         :hostile_ratio => number(),
         :recent_violence => non_neg_integer()
       },
       :system_id => _,
       :threat_level => :critical | :high | :low | :medium
     }}


________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/chain_threat_analyzer.ex:61:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/profile_manager.ex:206:exact_eq
The test pos_integer() == 0 can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/domain/profile_manager.ex:206:pattern_match
The pattern can never match the type.

Pattern:
true

Type:
false

________________________________________________________________________________
lib/eve_dmv/contexts/surveillance/infrastructure/notification_dispatcher.ex:401:pattern_match
The pattern can never match the type.

Pattern:
:timeout

Type:
:email_not_configured | :webhooks_not_configured | {:http_error, 200 | 404 | 500}

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:460:exact_eq
The test nil | {:ok, float()} == :red can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:461:exact_eq
The test nil | {:ok, float()} == :blue can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:570:exact_eq
The test nil | {:ok, float()} == :red can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:573:exact_eq
The test nil | {:ok, float()} == :blue can never evaluate to 'true'.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:647:pattern_match
The pattern can never match the type.

Pattern:
true

Type:
false

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/threat_analyzer.ex:916:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :alliance_id => nil,
     :character_id => 0,
     :character_name => <<_::56>>,
     :corporation_id => 0,
     :threat_level => :unknown
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:257:no_return
Function calculate_exploitability_rating/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:308:unused_fun
Function generate_vulnerability_summary/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:990:no_return
Function calculate_base_operational_score/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:994:call
The function call will not succeed.

Float.round(_risk_exposure :: 15 | 35, 1)

breaks the contract
(float(), precision_range()) :: float()

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:997:unused_fun
Function calculate_base_social_score/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1004:unused_fun
Function categorize_exploitability_rating/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1009:unused_fun
Function identify_primary_attack_vectors/4 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1023:unused_fun
Function assess_exploitation_difficulty/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1027:unused_fun
Function assess_exploitation_impact/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1030:unused_fun
Function identify_key_vulnerabilities/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1034:unused_fun
Function identify_critical_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1038:unused_fun
Function prioritize_vulnerability_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1046:unused_fun
Function create_mitigation_roadmap/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1054:unused_fun
Function determine_overall_vulnerability_level/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1056:unused_fun
Function identify_immediate_actions/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1060:unused_fun
Function recommend_reassessment_schedule/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/analyzers/vulnerability_scanner.ex:1062:unused_fun
Function create_executive_summary/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:157:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _scan_result}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:169:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _threat_level}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:180:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _report}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:199:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _assessment}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:226:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _vulnerability_scan}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:274:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _assessment}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:284:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _assessment}

Type:

  {:error,
   %EveDmv.Error{
     :code => atom(),
     :context => map(),
     :details => map(),
     :message => binary(),
     :stacktrace => nil | [any()]
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:304:unused_fun
Function calculate_threat_level/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:318:unused_fun
Function identify_risk_factors/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:340:unused_fun
Function generate_mitigation_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:362:unused_fun
Function calculate_assessment_confidence/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:377:unused_fun
Function create_executive_summary/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:396:unused_fun
Function extract_key_findings/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:444:unused_fun
Function create_risk_matrix/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:456:unused_fun
Function create_action_plan/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:487:pattern_match
The pattern can never match the type.

Pattern:
:cache_miss

Type:
:batch_analysis

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:497:pattern_match
The pattern can never match the type.

Pattern:
:vulnerability_scan

Type:
:batch_analysis | :cache_hit

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:500:pattern_match
The pattern can never match the type.

Pattern:
:threat_report

Type:
:batch_analysis | :cache_hit

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:515:unused_fun
Function update_threat_level_distribution/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:530:unused_fun
Function add_behavioral_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:542:unused_fun
Function add_tactical_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:552:unused_fun
Function add_operational_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:562:unused_fun
Function add_social_risks/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:572:unused_fun
Function add_behavioral_mitigations/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:577:unused_fun
Function add_tactical_mitigations/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:582:unused_fun
Function add_operational_mitigations/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:587:unused_fun
Function add_social_mitigations/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:592:unused_fun
Function assess_data_quality/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:601:unused_fun
Function assess_analysis_completeness/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:614:unused_fun
Function get_risk_level/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:639:unused_fun
Function categorize_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/domain/threat_analyzer.ex:652:unused_fun
Function determine_review_schedule/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/standings_repository.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.StandingsRepository.check_corporation_standing/1

Extra type:
{:error, _}

Success typing:
{:ok, float()}

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/standings_repository.ex:20:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.StandingsRepository.check_alliance_standing/1

Extra type:
{:error, _}

Success typing:
{:ok, float()}

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/threat_data_provider.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.ThreatDataProvider.get_character_stats/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :death_count => 0,
     :isk_destroyed => 0,
     :isk_lost => 0,
     :kill_count => 0,
     :last_activity => nil,
     :threat_rating => float()
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/threat_data_provider.ex:28:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.ThreatDataProvider.get_recent_activity/2

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/threat_data_provider.ex:36:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.ThreatDataProvider.find_known_associates/2

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/threat_data_provider.ex:44:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.ThreatDataProvider.get_inhabitant_details/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :alliance_id => nil,
     :character_id => 0,
     :character_name => <<_::56>>,
     :corporation_id => 0,
     :threat_level => :unknown
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/threat_assessment/infrastructure/threat_data_provider.ex:59:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.ThreatAssessment.Infrastructure.ThreatDataProvider.update_inhabitant_threat/2

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :updated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     _ => _
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:92:call
The function call will not succeed.

EveDmv.Contexts.WormholeOperations.Api.get_vetting_statistics(_ :: any(), :last_30d)

will never return since the 2nd arguments differ
from the success typing arguments:

(integer(), map())

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:92:no_return
Function get_vetting_statistics/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:106:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _defense_analysis}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:143:call
The function call will not succeed.

EveDmv.Contexts.WormholeOperations.Api.track_defense_metrics(_ :: any(), :last_30d)

will never return since the 2nd arguments differ
from the success typing arguments:

(integer(), map())

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:143:no_return
Function track_defense_metrics/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:178:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _efficiency_metrics}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:189:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _suggestions}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:201:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _validation_result}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:221:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :compliance_score => float(),
     :recommendations => [],
     :risk_level => :low,
     :violations => []
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:233:call
The function call will not succeed.

EveDmv.Contexts.WormholeOperations.Api.get_opsec_violations(_ :: any(), :last_30d)

will never return since the 2nd arguments differ
from the success typing arguments:

(integer(), map())

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:233:no_return
Function get_opsec_violations/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:267:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _activity_analysis}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:283:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _threat_assessment}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/api.ex:294:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _coverage_optimization}

Type:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/chain_intelligence_service.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.ChainIntelligenceService.calculate_system_strategic_value/1

Extra type:
{:ok, float()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/chain_intelligence_service.ex:23:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.ChainIntelligenceService.analyze_chain_activity/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/chain_intelligence_service.ex:34:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.ChainIntelligenceService.assess_chain_threats/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/chain_intelligence_service.ex:45:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.ChainIntelligenceService.optimize_chain_coverage/2

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/chain_intelligence_service.ex:56:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.ChainIntelligenceService.get_intelligence_summary/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/home_defense_analyzer.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.HomeDefenseAnalyzer.analyze_defense_capabilities/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/home_defense_analyzer.ex:23:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.HomeDefenseAnalyzer.assess_system_vulnerabilities/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/home_defense_analyzer.ex:34:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.HomeDefenseAnalyzer.calculate_defense_readiness_score/1

Extra type:
{:ok, float()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/home_defense_analyzer.ex:45:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.HomeDefenseAnalyzer.analyze_system_defense/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :defense_readiness => float(),
     :defensive_assets => %{
       :active_members => 0,
       :available_ships => 0,
       :response_time => 0
     },
     :threat_level => :moderate,
     :vulnerabilities => []
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/home_defense_analyzer.ex:65:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.HomeDefenseAnalyzer.generate_defense_recommendations/1

Extra type:
{:ok, [map()]}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/mass_optimizer.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/mass_optimizer.ex:62:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.MassOptimizer.calculate_mass_efficiency/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/mass_optimizer.ex:73:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.MassOptimizer.generate_optimization_suggestions/2

Extra type:
{:ok, [map()]}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/mass_optimizer.ex:84:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.MassOptimizer.validate_mass_constraints/2

Extra type:
{:ok, map()}

Success typing:
{:error, :not_implemented}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/mass_optimizer.ex:94:invalid_contract
The @spec for the function does not match the success typing of the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.MassOptimizer.get_metrics/0

Success typing:
@spec get_metrics() :: map()

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/operational_security_monitor.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.OperationalSecurityMonitor.assess_opsec_compliance/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :compliance_score => float(),
     :recommendations => [],
     :risk_level => :low,
     :violations => []
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/operational_security_monitor.ex:26:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.OperationalSecurityMonitor.get_opsec_violations/2

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/operational_security_monitor.ex:34:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.OperationalSecurityMonitor.generate_opsec_recommendations/1

Extra type:
{:error, _}

Success typing:
{:ok, []}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/operational_security_monitor.ex:42:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Domain.OperationalSecurityMonitor.get_opsec_metrics/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :compliance_score => float(),
     :monitoring_coverage => float(),
     :risk_incidents => 0,
     :violations_count => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:125:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :character_id => integer(),
     :detailed_analysis => %{
       :character_assessment => map(),
       :corp_history => map(),
       :killboard_analysis => map(),
       :opsec_assessment => map(),
       :wormhole_experience => map()
     },
     :expires_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :green_flags => [map()],
     :improvement_areas => [:corporation_stability | :pvp_activity | :wormhole_experience],
     :overall_risk_score => float(),
     :overall_score => float(),
     :recommendation =>
       :approve | :conditional_approval | :reject | :review_required | :strong_approve,
     :red_flags => [any()],
     :vetted_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :vetting_criteria => map(),
     :vetting_id => binary(),
     :vetting_scores => %{
       :character_age_score => float(),
       :corp_history_score => float(),
       :killboard_score => float(),
       :opsec_risk_score => float(),
       :skill_focus_score => float(),
       :wormhole_experience_score => float()
     }
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:134:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _vetting_report}

Type:
{:error, :not_found}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:538:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 0, :last => 1, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:539:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 2, :last => 4, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:540:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 5, :last => 7, :step => 1}

Type:
integer()

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1175:unused_fun
Function generate_detailed_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1199:unused_fun
Function generate_conditional_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1205:unused_fun
Function maybe_add_background_verification/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1213:unused_fun
Function maybe_add_mentor_assignment/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1221:unused_fun
Function generate_review_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/domain/recruitment_vetter.ex:1225:unused_fun
Function generate_rejection_recommendations/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/defense_metrics_cache.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.DefenseMetricsCache.get_defense_metrics/2

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :average_response_time => 0,
     :coverage_percentage => float(),
     :failed_defenses => 0,
     :response_times => [],
     :successful_defenses => 0,
     :threat_detections => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/vetting_repository.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.VettingRepository.store_vetting_report/1

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :stored_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     _ => _
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/vetting_repository.ex:27:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.VettingRepository.get_latest_vetting/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_found}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/vetting_repository.ex:35:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.VettingRepository.get_vetting_report/1

Extra type:
{:ok, map()}

Success typing:
{:error, :not_found}

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/vetting_repository.ex:43:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.VettingRepository.update_corporation_criteria/2

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :updated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     _ => _
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/vetting_repository.ex:53:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.VettingRepository.get_vetting_statistics/2

Extra type:
{:error, _}

Success typing:

  {:ok,
   %{
     :approved_count => 0,
     :average_processing_time => 0,
     :pending_count => 0,
     :rejected_count => 0,
     :total_vettings => 0
   }}


________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/wormhole_data_provider.ex:12:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Contexts.WormholeOperations.Infrastructure.WormholeDataProvider.refresh_cache/0

Extra type:
{:error, _}

Success typing:
:ok

________________________________________________________________________________
lib/eve_dmv/contexts/wormhole_operations/infrastructure/wormhole_event_processor.ex:229:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :defense_readiness => float(),
     :defensive_assets => %{
       :active_members => 0,
       :available_ships => 0,
       :response_time => 0
     },
     :threat_level => :moderate,
     :vulnerabilities => []
   }}


________________________________________________________________________________
lib/eve_dmv/database/archive_manager/restore_operations.ex:131:pattern_match
The pattern can never match the type.

Pattern:
{:error, _error}

Type:
{:ok, binary(), [any()]}

________________________________________________________________________________
lib/eve_dmv/database/character_repository.ex:9:call
The function call will not succeed.

Ash.bulk_create(EveDmv.Intelligence.CharacterStats, _ :: maybe_improper_list(), [{:domain, EveDmv.Api}]) ::
  :ok
def a() do
  :ok
end

will never return since the 2nd and 3rd arguments differ
from the success typing arguments:

(any(), atom(), atom())

________________________________________________________________________________
lib/eve_dmv/database/character_repository.ex:9:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/database/character_repository.ex:9:pattern_match
The pattern can never match the type.

Pattern:
%{:errors => _}

Type:
[]

________________________________________________________________________________
lib/eve_dmv/database/killmail_repository.ex:10:call
The function call will not succeed.

Ash.bulk_create(EveDmv.Killmails.KillmailEnriched, _ :: maybe_improper_list(), [{:domain, EveDmv.Api}]) ::
  :ok
def a() do
  :ok
end

will never return since the 2nd and 3rd arguments differ
from the success typing arguments:

(any(), atom(), atom())

________________________________________________________________________________
lib/eve_dmv/database/killmail_repository.ex:10:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/database/killmail_repository.ex:10:pattern_match
The pattern can never match the type.

Pattern:
%{:errors => _}

Type:
[]

________________________________________________________________________________
lib/eve_dmv/database/surveillance_repository.ex:9:call
The function call will not succeed.

Ash.bulk_create(EveDmv.Surveillance.Profile, _ :: maybe_improper_list(), [{:domain, EveDmv.Api}])

will never return since the 2nd and 3rd arguments differ
from the success typing arguments:

(any(), atom(), atom())

________________________________________________________________________________
lib/eve_dmv/database/surveillance_repository.ex:9:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/database/surveillance_repository.ex:9:pattern_match
The pattern can never match the type.

Pattern:
%{:errors => _}

Type:
[]

________________________________________________________________________________
lib/eve_dmv/error.ex:152:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
atom().

________________________________________________________________________________
lib/eve_dmv/error_handler.ex:154:pattern_match
The pattern can never match the type.

Pattern:
{:fallback, _}

Type:
{:propagate, _}

________________________________________________________________________________
lib/eve_dmv/error_handler.ex:160:pattern_match
The pattern can never match the type.

Pattern:
:ignore

Type:
{:propagate, _} | {:retry, 1000 | 2000 | 5000 | 10000 | 30000}

________________________________________________________________________________
lib/eve_dmv/eve/esi_corporation_client.ex:33:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _resp}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/eve/esi_market_client.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/eve/esi_market_client.ex:46:pattern_match
The pattern can never match the type.

Pattern:
{:ok, %{:body => _data}}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/eve/esi_request_client.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/eve/esi_request_client.ex:87:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/esi_universe_client.ex:38:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/esi_universe_client.ex:65:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/esi_universe_client.ex:114:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/esi_universe_client.ex:141:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/esi_universe_client.ex:168:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
{:error, :service_unavailable} | {:ok, map()}.

________________________________________________________________________________
lib/eve_dmv/eve/fallback_strategy.ex:81:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _stale_data, :stale}

Type:
:miss

________________________________________________________________________________
lib/eve_dmv/eve/fallback_strategy.ex:260:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _stale_data, :stale}

Type:
:miss

________________________________________________________________________________
lib/eve_dmv/eve/fallback_strategy.ex:303:call
The function call will not succeed.

DateTime.diff(
  %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  _timestamp :: integer(),
  :second
)

will never return since the success typing is:
(
  %{
    :calendar => atom(),
    :day => _,
    :hour => _,
    :microsecond => _,
    :minute => _,
    :month => _,
    :second => _,
    :std_offset => integer(),
    :utc_offset => integer(),
    :year => _,
    _ => _
  },
  %{
    :calendar => atom(),
    :day => _,
    :hour => _,
    :microsecond => _,
    :minute => _,
    :month => _,
    :second => _,
    :std_offset => integer(),
    :utc_offset => integer(),
    :year => _,
    _ => _
  },
  :day
  | :hour
  | :microsecond
  | :millisecond
  | :minute
  | :nanosecond
  | :native
  | :second
  | pos_integer()
) :: integer()

and the contract is
(Calendar.datetime(), Calendar.datetime(), :day | :hour | :minute | System.time_unit()) ::
  integer()

________________________________________________________________________________
lib/eve_dmv/eve/name_resolver/static_data_resolver.ex:214:pattern_match
The pattern can never match the type.

Pattern:
:ship_type, _type_id

Type:
:solar_system_full, integer()

________________________________________________________________________________
lib/eve_dmv/eve/name_resolver/static_data_resolver.ex:218:pattern_match
The pattern can never match the type.

Pattern:
:item_type, _type_id

Type:
:solar_system_full, integer()

________________________________________________________________________________
lib/eve_dmv/eve/name_resolver/static_data_resolver.ex:232:pattern_match
The pattern can never match the type.

Pattern:
:solar_system, _system_id

Type:
:solar_system_full, integer()

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/data_persistence.ex:147:call
The function call will not succeed.

Ash.bulk_update(_item_data :: any(), EveDmv.Eve.ItemType, :update, [
  {:domain, EveDmv.Api},
  {:return_records?, false},
  {:return_errors?, true},
  {:stop_on_error?, false},
  {:authorize?, false},
  {:batch_size, 500}
])

breaks the contract
(Enumerable.t(Ash.Resource.record()) | Ash.Query.t(), atom(), input :: map(), Keyword.t()) ::
  Ash.BulkResult.t()

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/data_persistence.ex:178:call
The function call will not succeed.

Ash.bulk_update(_system_data :: any(), EveDmv.Eve.SolarSystem, :update, [
  {:domain, EveDmv.Api},
  {:return_records?, false},
  {:return_errors?, true},
  {:stop_on_error?, false},
  {:authorize?, false},
  {:batch_size, 500}
])

breaks the contract
(Enumerable.t(Ash.Resource.record()) | Ash.Query.t(), atom(), input :: map(), Keyword.t()) ::
  Ash.BulkResult.t()

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/data_persistence.ex:242:call
The function call will not succeed.

Ash.bulk_destroy(_resource :: any(), :destroy, [
  {:domain, EveDmv.Api},
  {:return_records?, false},
  {:return_errors?, true},
  {:authorize?, false}
])

will never return since the 3rd arguments differ
from the success typing arguments:

(
  atom()
  | maybe_improper_list()
  | {atom() | struct(), _}
  | {atom() | struct(), _, _}
  | map(),
  atom(),
  map()
)

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:86:no_return
The created anonymous function has no local return.
________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:97:no_return
Function download_single_file/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:121:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:error, atom(), binary()}

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:174:no_return
Function download_file/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:176:call
The function call will not succeed.

Finch.build(_url :: <<_::8, _::size(1)>>, :get)

will never return since the 2nd arguments differ
from the success typing arguments:

(
  :delete | :get | :head | :options | :patch | :post | :put | binary(),
  binary()
  | %URI{
      :authority => URI.authority(),
      :fragment => nil | binary(),
      :host => nil | binary(),
      :path => nil | binary(),
      :port => nil | char(),
      :query => nil | binary(),
      :scheme => <<_::32, _::size(8)>>,
      :userinfo => nil | binary()
    }
)

________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/file_manager.ex:189:unused_fun
Function decompress_bz2/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/eve/static_data_loader/sde_version_manager.ex:75:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:47:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _analysis}

Type:

  {:error, :fleet_too_small}
  | %{
      :analysis_timestamp => %DateTime{
        :calendar => atom(),
        :day => pos_integer(),
        :hour => non_neg_integer(),
        :microsecond => {non_neg_integer(), non_neg_integer()},
        :minute => non_neg_integer(),
        :month => pos_integer(),
        :second => non_neg_integer(),
        :std_offset => integer(),
        :time_zone => binary(),
        :utc_offset => integer(),
        :year => integer(),
        :zone_abbr => binary()
      },
      :doctrine_classification => %{
        :confidence => _,
        :doctrine => _,
        :doctrine_name => _,
        :match_quality => <<_::32, _::size(8)>>,
        :note => <<_::256, _::size(32)>>,
        :pattern => _
      },
      :fleet_size => non_neg_integer(),
      :recommendations => [any()],
      :role_distribution => map(),
      :tactical_assessment => %{
        :logistics => %{
          :assessment => <<_::56, _::size(8)>>,
          :count => non_neg_integer(),
          :ratio => float(),
          :recommendation => <<_::64, _::size(8)>>,
          :score => float()
        },
        :overall_readiness => <<_::64, _::size(8)>>,
        :range_coherence => %{
          :assessment => <<_::88>>,
          :dominant_range => <<_::88>>,
          :recommendation => <<_::312>>,
          :score => float()
        },
        :support_coverage => %{
          :assessment => <<_::56, _::size(8)>>,
          :command_coverage => number(),
          :ewar_coverage => number(),
          :score => float(),
          :tackle_coverage => number()
        },
        :tank_consistency => %{
          :armor_ratio => float(),
          :assessment => <<_::32, _::size(8)>>,
          :dominant_tank => <<_::40, _::size(8)>>,
          :score => float(),
          :shield_ratio => float()
        }
      },
      :threat_level => float()
    }


________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:58:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
%{
  :analysis_timestamp => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :doctrine_classification => %{
    :confidence => _,
    :doctrine => _,
    :doctrine_name => _,
    :match_quality => <<_::32, _::size(8)>>,
    :note => <<_::256, _::size(32)>>,
    :pattern => _
  },
  :fleet_size => non_neg_integer(),
  :recommendations => [any()],
  :role_distribution => map(),
  :tactical_assessment => %{
    :logistics => %{
      :assessment => <<_::56, _::size(8)>>,
      :count => non_neg_integer(),
      :ratio => float(),
      :recommendation => <<_::64, _::size(8)>>,
      :score => float()
    },
    :overall_readiness => <<_::64, _::size(8)>>,
    :range_coherence => %{
      :assessment => <<_::88>>,
      :dominant_range => <<_::88>>,
      :recommendation => <<_::312>>,
      :score => float()
    },
    :support_coverage => %{
      :assessment => <<_::56, _::size(8)>>,
      :command_coverage => number(),
      :ewar_coverage => number(),
      :score => float(),
      :tackle_coverage => number()
    },
    :tank_consistency => %{
      :armor_ratio => float(),
      :assessment => <<_::32, _::size(8)>>,
      :dominant_tank => <<_::40, _::size(8)>>,
      :score => float(),
      :shield_ratio => float()
    }
  },
  :threat_level => float()
}

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:74:guard_fail
The guard clause:

when _ :: %{} === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:75:guard_fail
The guard clause:

when _ :: [] === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:184:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :analysis_period_days => number(),
     :calculated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :expertise_level => :beginner | :competent | :experienced | :expert | :novice,
     :preferred_roles => [any()],
     :ship_mastery => _,
     :specializations => map(),
     :total_killmails => non_neg_integer(),
     :note => <<_::240>>
   }}


________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:212:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
%{
  :analysis_timestamp => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {non_neg_integer(), non_neg_integer()},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :doctrine_classification => %{
    :confidence => _,
    :doctrine => _,
    :doctrine_name => _,
    :match_quality => <<_::32, _::size(8)>>,
    :note => <<_::256, _::size(32)>>,
    :pattern => _
  },
  :fleet_size => non_neg_integer(),
  :recommendations => [any()],
  :role_distribution => map(),
  :tactical_assessment => %{
    :logistics => %{
      :assessment => <<_::56, _::size(8)>>,
      :count => non_neg_integer(),
      :ratio => float(),
      :recommendation => <<_::64, _::size(8)>>,
      :score => float()
    },
    :overall_readiness => <<_::64, _::size(8)>>,
    :range_coherence => %{
      :assessment => <<_::88>>,
      :dominant_range => <<_::88>>,
      :recommendation => <<_::312>>,
      :score => float()
    },
    :support_coverage => %{
      :assessment => <<_::56, _::size(8)>>,
      :command_coverage => number(),
      :ewar_coverage => number(),
      :score => float(),
      :tackle_coverage => number()
    },
    :tank_consistency => %{
      :armor_ratio => float(),
      :assessment => <<_::32, _::size(8)>>,
      :dominant_tank => <<_::40, _::size(8)>>,
      :score => float(),
      :shield_ratio => float()
    }
  },
  :threat_level => float()
}

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:212:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _analysis}

Type:

  {:error, :fleet_too_small}
  | %{
      :analysis_timestamp => %DateTime{
        :calendar => atom(),
        :day => pos_integer(),
        :hour => non_neg_integer(),
        :microsecond => {non_neg_integer(), non_neg_integer()},
        :minute => non_neg_integer(),
        :month => pos_integer(),
        :second => non_neg_integer(),
        :std_offset => integer(),
        :time_zone => binary(),
        :utc_offset => integer(),
        :year => integer(),
        :zone_abbr => binary()
      },
      :doctrine_classification => %{
        :confidence => _,
        :doctrine => _,
        :doctrine_name => _,
        :match_quality => <<_::32, _::size(8)>>,
        :note => <<_::256, _::size(32)>>,
        :pattern => _
      },
      :fleet_size => non_neg_integer(),
      :recommendations => [any()],
      :role_distribution => map(),
      :tactical_assessment => %{
        :logistics => %{
          :assessment => <<_::56, _::size(8)>>,
          :count => non_neg_integer(),
          :ratio => float(),
          :recommendation => <<_::64, _::size(8)>>,
          :score => float()
        },
        :overall_readiness => <<_::64, _::size(8)>>,
        :range_coherence => %{
          :assessment => <<_::88>>,
          :dominant_range => <<_::88>>,
          :recommendation => <<_::312>>,
          :score => float()
        },
        :support_coverage => %{
          :assessment => <<_::56, _::size(8)>>,
          :command_coverage => number(),
          :ewar_coverage => number(),
          :score => float(),
          :tackle_coverage => number()
        },
        :tank_consistency => %{
          :armor_ratio => float(),
          :assessment => <<_::32, _::size(8)>>,
          :dominant_tank => <<_::40, _::size(8)>>,
          :score => float(),
          :shield_ratio => float()
        }
      },
      :threat_level => float()
    }


________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:371:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :command => float(),
  :dps => float(),
  :ewar => float(),
  :logistics => float(),
  :support => float(),
  :tackle => float()
}.

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:534:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :command => float(),
  :dps => float(),
  :ewar => float(),
  :logistics => float(),
  :support => float(),
  :tackle => float()
}.

________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:601:unused_fun
Function assess_operational_readiness/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:620:unused_fun
Function assess_engagement_suitability/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/integrations/ship_intelligence_bridge.ex:634:unused_fun
Function assess_logistics_sustainability/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/advanced_analytics.ex:272:call
The function call will not succeed.

Float.round(_weighted_score :: [any()], 2)

will never return since the success typing is:
(number(), byte()) :: number()

and the contract is
(float(), precision_range()) :: float()

________________________________________________________________________________
lib/eve_dmv/intelligence/advanced_analytics.ex:339:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/intelligence/advanced_analytics.ex:346:unused_fun
Function generate_risk_recommendations/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:58:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :assets_analyzed => non_neg_integer(),
     :location_analysis => _,
     :readiness_score => integer(),
     :recommendations => [any()],
     :ship_availability => _,
     :total_ships_available => number(),
     <<_::40, _::size(8)>> => boolean() | <<_::208, _::size(144)>> | 0 | %{}
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/fleet_pilot_analyzer.ex:35:pattern_match
The pattern can never match the type.

Pattern:
{:ok, []}

Type:

  {:ok,
   %{
     :__struct__ => Ash.Page.Keyset | Ash.Page.Offset,
     :count => integer(),
     :limit => integer(),
     :more? => boolean(),
     :rerun => {map(), [any()]},
     :results => [map()],
     :after => nil | binary(),
     :before => nil | binary(),
     :offset => integer()
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/fleet_pilot_analyzer.ex:39:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :__struct__ => Ash.Page.Keyset | Ash.Page.Offset,
     :count => integer(),
     :limit => integer(),
     :more? => boolean(),
     :rerun => {map(), [any()]},
     :results => [map()],
     :after => nil | binary(),
     :before => nil | binary(),
     :offset => integer()
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:20:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Intelligence.Analyzers.HomeDefenseAnalyzer.analyze_corporation/2

Extra type:
{:ok, map()}

Success typing:
{:error, <<_::280, _::size(32)>>}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:75:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Intelligence.Analyzers.HomeDefenseAnalyzer.analyze_home_defense/2

Extra type:
{:ok, map()}

Success typing:
{:error, <<_::280, _::size(32)>>}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:112:extra_range
The type specification has too many types for the function.

Function:
EveDmv.Intelligence.Analyzers.HomeDefenseAnalyzer.analyze_rolling_participation/1

Extra type:
map()

Success typing:
none()

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:113:no_return
Function analyze_rolling_participation/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:115:call
The function call will not succeed.

EveDmv.Intelligence.Analyzers.HomeDefenseAnalyzer.count_rolling_events(_rolling_indicators :: [any()])

will never return since the 1st arguments differ
from the success typing arguments:

(map())

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:203:guard_fail
The guard test:

is_list(
  _killmails ::
    {:error,
     %{
       :__exception__ => true,
       :__struct__ => atom(),
       :bread_crumbs => [any()],
       :class => :forbidden | :framework | :invalid | :unknown,
       :context => map(),
       :stacktrace => nil | map(),
       :vars => [any()],
       atom() => _
     }}
    | {:ok,
       [map()]
       | %{
           :__struct__ => Ash.Page.Keyset | Ash.Page.Offset,
           :count => integer(),
           :limit => integer(),
           :more? => boolean(),
           :rerun => {_, _},
           :results => [any()],
           :after => nil | binary(),
           :before => nil | binary(),
           :offset => integer()
         }}
)

can never succeed.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:272:no_return
Function count_rolling_events/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:273:call
The function call will not succeed.

:erlang.map_size(_rolling_indicators :: [any()])

will never return since the 1st arguments differ
from the success typing arguments:

(map())

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:276:unused_fun
Function calculate_rolling_frequency/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:286:unused_fun
Function assess_rolling_effectiveness/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:294:unused_fun
Function identify_active_rollers/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:419:unused_fun
Function calculate_defense_score/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:428:unused_fun
Function identify_coverage_gaps/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/home_defense_analyzer.ex:443:unused_fun
Function save_analysis_results/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:37:pattern_match
The pattern can never match the type.

Pattern:
{:error, :no_members_found}

Type:

  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:415:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _auth_token}

Type:
{:error, :no_auth_token}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:434:pattern_match_cov
The pattern
{:error, _reason}

can never match, because previous clauses completely cover the type
{:error, :no_auth_token}.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:626:pattern_match_cov
The pattern
%{:member_details => _details}

can never match, because previous clauses completely cover the type
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:627:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:633:pattern_match
The pattern can never match the type.

Pattern:
%{:active_member_count => _count}

Type:
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:641:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:648:pattern_match
The pattern can never match the type.

Pattern:
%{:activity_trends => _trends}

Type:
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:649:pattern_match
The pattern can never match the type.

Pattern:
%{:engagement_metrics => %{:trends => _trends}}

Type:
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:659:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :corporation_id => _,
  :engagement_metrics => %{
    :activity_trend => :declining | :increasing | :stable,
    :average_activity_score => float(),
    :engagement_rate => float(),
    :inactive_members => integer(),
    :total_active_members => non_neg_integer()
  },
  :generated_at => %DateTime{
    :calendar => atom(),
    :day => pos_integer(),
    :hour => non_neg_integer(),
    :microsecond => {_, _},
    :minute => non_neg_integer(),
    :month => pos_integer(),
    :second => non_neg_integer(),
    :std_offset => integer(),
    :time_zone => binary(),
    :utc_offset => integer(),
    :year => integer(),
    :zone_abbr => binary()
  },
  :member_count => non_neg_integer(),
  :member_details => [any()],
  :recommendations => [<<_::64, _::size(8)>>],
  :risk_summary => %{
    :high_risk_members => non_neg_integer(),
    :low_risk_members => integer(),
    :medium_risk_members => non_neg_integer(),
    :overall_risk_level => :high | :low | :medium | :unknown,
    :risk_percentage => float(),
    :total_members => non_neg_integer()
  }
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:1088:unused_fun
Function enrich_member_data/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:96:no_return
Function perform_advanced_trend_analysis/3 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:97:pattern_match
The pattern can never match the type.

Pattern:
{__trend_direction, __growth_rate}

Type:
%{:change_percent => number(), :direction => :decreasing | :increasing | :stable}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:148:unused_fun
Function calculate_activity_metrics/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:246:unused_fun
Function calculate_activity_change_percent/4 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:261:unused_fun
Function calculate_trend_confidence/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:280:unused_fun
Function calculate_volatility_score/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:296:unused_fun
Function calculate_variance/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:307:unused_fun
Function generate_activity_prediction/3 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:327:unused_fun
Function calculate_prediction_confidence/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/member_activity_analyzer/activity_trend_analyzer.ex:342:unused_fun
Function generate_prediction_recommendation/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/wh_vetting_analyzer.ex:369:pattern_match
The pattern can never match the type.

Pattern:
{:error, :character_not_found}

Type:
{:error, :timeout | {:exception, map()}}

________________________________________________________________________________
lib/eve_dmv/intelligence/analyzers/wh_vetting_analyzer.ex:452:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _history}

Type:
{:error, :service_unavailable}

________________________________________________________________________________
lib/eve_dmv/intelligence/character_analyzer.ex:70:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, %{}}

________________________________________________________________________________
lib/eve_dmv/intelligence/character_analyzer.ex:152:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, %{}}

________________________________________________________________________________
lib/eve_dmv/intelligence/core/correlation_engine.ex:341:pattern_match
The pattern can never match the type.

Pattern:
[]

Type:
[<<_::64, _::size(8)>>, ...]

________________________________________________________________________________
lib/eve_dmv/intelligence/core/intelligence_coordinator.ex:93:no_return
Function warm_character_cache/0 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence/core/intelligence_coordinator.ex:97:call
The function call will not succeed.

EveDmv.Intelligence.Core.CacheHelper.warm_cache(:character_cache, (-> %{
                          :entries => 100,
                          :warmed_at => %DateTime{
                            :calendar => atom(),
                            :day => pos_integer(),
                            :hour => non_neg_integer(),
                            :microsecond => {_, _},
                            :minute => non_neg_integer(),
                            :month => pos_integer(),
                            :second => non_neg_integer(),
                            :std_offset => integer(),
                            :time_zone => binary(),
                            :utc_offset => integer(),
                            :year => integer(),
                            :zone_abbr => binary()
                          }
                        }))

will never return since the success typing is:
([any()], any()) :: :ok

and the contract is
([{analysis_type(), integer(), (-> cache_value())}], cache_ttl()) :: :ok

________________________________________________________________________________
lib/eve_dmv/intelligence/core/intelligence_coordinator.ex:103:unused_fun
Function warm_analysis_cache/0 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/core/intelligence_coordinator.ex:113:unused_fun
Function warm_threat_cache/0 will never be called.
________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/fleet_scoring.ex:28:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{
     :component_scores => %{
       :behavioral_stability => float(),
       :combat_competency => float(),
       :intelligence_reliability => float(),
       :operational_value => float(),
       :security_risk => float(),
       :tactical_intelligence => float()
     },
     :overall_score => float()
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/intelligence_suitability.ex:372:pattern_match_cov
The pattern
variable_score

can never match, because previous clauses completely cover the type
%{
  :component_scores => map(),
  :opsec_recommendations => [any()],
  :overall_opsec_score => _,
  :risk_assessment => [any()]
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/intelligence_suitability.ex:373:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :component_scores => map(),
  :opsec_recommendations => [any()],
  :overall_opsec_score => _,
  :risk_assessment => [any()]
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/intelligence_suitability.ex:439:pattern_match_cov
The pattern
variable_score

can never match, because previous clauses completely cover the type
%{
  :component_scores => map(),
  :opsec_recommendations => [any()],
  :overall_opsec_score => _,
  :risk_assessment => [any()]
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/intelligence_suitability.ex:440:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :component_scores => map(),
  :opsec_recommendations => [any()],
  :overall_opsec_score => _,
  :risk_assessment => [any()]
}.

________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/recruitment_scoring.ex:56:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :background_check => :passed,
     :communication_style_fit => float(),
     :experience_level => float(),
     :learning_aptitude => float(),
     :references => :positive,
     :social_compatibility => float()
   }}


________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/recruitment_scoring.ex:284:no_return
Function calculate_role_match/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence/intelligence_scoring/recruitment_scoring.ex:290:call
The function call will not succeed.

:erlang.length(%MapSet{:map => MapSet.internal(_) | :sets.set(_)})

will never return since the 1st arguments differ
from the success typing arguments:

([any()])

________________________________________________________________________________
lib/eve_dmv/intelligence/wanderer_client.ex:190:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, pid()}

________________________________________________________________________________
lib/eve_dmv/intelligence/wanderer_client.ex:241:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, pid()}

________________________________________________________________________________
lib/eve_dmv/intelligence/wanderer_client.ex:524:call
The function call will not succeed.

HTTPoison.stream_next(pid())

will never return since the success typing is:
(%HTTPoison.AsyncResponse{:id => _, _ => _}) ::
  {:error, %HTTPoison.Error{:__exception__ => true, :id => _, :reason => <<_::160>>}}
  | {:ok, %HTTPoison.AsyncResponse{:id => _, _ => _}}

and the contract is
(HTTPoison.AsyncResponse.t()) ::
  {:ok, HTTPoison.AsyncResponse.t()} | {:error, HTTPoison.Error.t()}

________________________________________________________________________________
lib/eve_dmv/intelligence/wanderer_client.ex:532:call
The function call will not succeed.

HTTPoison.stream_next(pid())

will never return since the success typing is:
(%HTTPoison.AsyncResponse{:id => _, _ => _}) ::
  {:error, %HTTPoison.Error{:__exception__ => true, :id => _, :reason => <<_::160>>}}
  | {:ok, %HTTPoison.AsyncResponse{:id => _, _ => _}}

and the contract is
(HTTPoison.AsyncResponse.t()) ::
  {:ok, HTTPoison.AsyncResponse.t()} | {:error, HTTPoison.Error.t()}

________________________________________________________________________________
lib/eve_dmv/intelligence/wanderer_client.ex:537:call
The function call will not succeed.

HTTPoison.stream_next(pid())

will never return since the success typing is:
(%HTTPoison.AsyncResponse{:id => _, _ => _}) ::
  {:error, %HTTPoison.Error{:__exception__ => true, :id => _, :reason => <<_::160>>}}
  | {:ok, %HTTPoison.AsyncResponse{:id => _, _ => _}}

and the contract is
(HTTPoison.AsyncResponse.t()) ::
  {:ok, HTTPoison.AsyncResponse.t()} | {:error, HTTPoison.Error.t()}

________________________________________________________________________________
lib/eve_dmv/intelligence_engine/plugins/character/combat_stats.ex:16:callback_type_mismatch
Type mismatch for @callback plugin_info/0 in EveDmv.IntelligenceEngine.Plugin behaviour.

Expected type:
%{
  :dependencies => [atom()],
  :description => binary(),
  :name => binary(),
  :version => binary()
}

Actual type:
%{
  :author => <<_::216>>,
  :dependencies => [
    EveDmv.Database.CharacterRepository | EveDmv.Database.KillmailRepository,
    ...
  ],
  :description => <<_::416>>,
  :name => <<_::136>>,
  :tags => [<<_::24, _::size(8)>>, ...],
  :version => <<_::40>>
}

________________________________________________________________________________
lib/eve_dmv/intelligence_engine/plugins/character/combat_stats.ex:32:call
The function call will not succeed.

EveDmv.IntelligenceEngine.Plugins.Character.CombatStats.analyze(_ :: any(), _ :: any(), [])

will never return since the 3rd arguments differ
from the success typing arguments:

(integer(), any(), map())

________________________________________________________________________________
lib/eve_dmv/intelligence_engine/plugins/character/combat_stats.ex:32:no_return
Function analyze/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/intelligence_engine/plugins/character/combat_stats.ex:32:callback_arg_type_mismatch
The inferred type for the 3rd argument is not a
supertype of the expected type for the analyze/3 callback
in the EveDmv.IntelligenceEngine.Plugin behaviour.

Success type:
map()

Behaviour callback type:
Keyword.t()

________________________________________________________________________________
lib/eve_dmv/intelligence_engine/plugins/character/combat_stats.ex:65:callback_type_mismatch
Type mismatch for @callback cache_strategy/0 in EveDmv.IntelligenceEngine.Plugin behaviour.

Expected type:
%{:invalidate_on => [atom()], :ttl_seconds => non_neg_integer()}

Actual type:
%{
  :invalidate_on => [:character_update | :killmail_update, ...],
  :strategy => :time_based,
  :ttl_seconds => 300
}

________________________________________________________________________________
lib/eve_dmv/killmails/historical_killmail_fetcher.ex:87:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _page}

Type:

  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}


________________________________________________________________________________
lib/eve_dmv/killmails/killmail_pipeline.ex:61:pattern_match
The pattern can never match the type.

Pattern:
[_processed_msg = %Broadway.Message{:status => :ok} | _]

Type:
%Broadway.Message{
  :acknowledger => {atom(), _, _},
  :batch_key => _,
  :batch_mode => :bulk | :flush,
  :batcher => atom(),
  :data => _,
  :metadata => %{atom() => _},
  :status =>
    :ok | {:failed, _} | {:error, _, [any()]} | {:exit, _, [any()]} | {:throw, _, [any()]}
}

________________________________________________________________________________
lib/eve_dmv/killmails/killmail_pipeline.ex:69:pattern_match
The pattern can never match the type.

Pattern:
[%Broadway.Message{:status => {:failed, _reason}} | _]

Type:
%Broadway.Message{
  :acknowledger => {atom(), _, _},
  :batch_key => _,
  :batch_mode => :bulk | :flush,
  :batcher => atom(),
  :data => _,
  :metadata => %{atom() => _},
  :status =>
    :ok | {:failed, _} | {:error, _, [any()]} | {:exit, _, [any()]} | {:throw, _, [any()]}
}

________________________________________________________________________________
lib/eve_dmv/logging/structured_formatter.ex:12:callback_arg_type_mismatch
The inferred type for the 1st argument is not a
supertype of the expected type for the format/2 callback
in the :logger_formatter behaviour.

Success type:
%{
  :level => _,
  :meta => nil | maybe_improper_list() | map(),
  :msg => _,
  :time => _,
  _ => _
}

Behaviour callback type:
%{
  :level => :alert | :critical | :debug | :emergency | :error | :info | :notice | :warning,
  :meta => %{
    :domain => [atom()],
    :file => string(),
    :gl => pid(),
    :line => non_neg_integer(),
    :mfa => {atom(), atom(), non_neg_integer()},
    :pid => pid(),
    :report_cb => (... ->
                     binary()
                     | maybe_improper_list(
                         binary() | maybe_improper_list(any(), binary() | []) | char(),
                         binary() | []
                       )
                     | {atom() | binary() | string(), [any()]}),
    :time => integer(),
    atom() => _
  },
  :msg =>
    {atom() | binary() | string(),
     binary() | maybe_improper_list(any(), binary() | []) | map()}
}

________________________________________________________________________________
lib/eve_dmv/logging/structured_formatter.ex:42:call
The function call will not succeed.

:erlang.convert_time_unit({non_neg_integer(), non_neg_integer(), non_neg_integer()}, :microsecond, :second)

will never return since the success typing is:
(
  integer(),
  :micro_seconds
  | :microsecond
  | :milli_seconds
  | :millisecond
  | :nano_seconds
  | :nanosecond
  | :native
  | :perf_counter
  | :second
  | :seconds
  | pos_integer(),
  :micro_seconds
  | :microsecond
  | :milli_seconds
  | :millisecond
  | :nano_seconds
  | :nanosecond
  | :native
  | :perf_counter
  | :second
  | :seconds
  | pos_integer()
) :: integer()

and the contract is
(time, fromUnit, toUnit) :: convertedTime
when time: integer(), convertedTime: integer(), fromUnit: time_unit(), toUnit: time_unit()

________________________________________________________________________________
lib/eve_dmv/market/strategies/esi_strategy.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv/market/strategies/esi_strategy.ex:42:pattern_match
The pattern can never match the type.

Pattern:
{:ok, %{:body => _order_list}}

Type:
[map()]

________________________________________________________________________________
lib/eve_dmv/market/strategies/esi_strategy.ex:49:pattern_match_cov
The pattern
variable_other

can never match, because previous clauses completely cover the type
[map()].

________________________________________________________________________________
lib/eve_dmv/monitoring/error_recovery_worker.ex:221:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
:error_spike_response | :health_intervention | :pipeline_restart | :rate_limit_adjustment.

________________________________________________________________________________
lib/eve_dmv/monitoring/error_recovery_worker.ex:306:pattern_match
The pattern can never match the type.

Pattern:
:database

Type:
:business_logic | :not_found | :security | :system | :unknown | :validation

________________________________________________________________________________
lib/eve_dmv/performance/regression_detector.ex:146:call
The function call will not succeed.

:erlang.length(_current_metrics :: map())

will never return since the 1st arguments differ
from the success typing arguments:

([any()])

________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:99:no_return
Function list_character_api_keys/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:101:call
The function call will not succeed.

Ash.read(
  %Ash.ActionInput{
    :action =>
      nil
      | %Ash.Resource.Actions.Action{
          :allow_nil? => boolean(),
          :arguments => [any()],
          :constraints => [any()],
          :description => nil | binary(),
          :name => atom(),
          :primary? => boolean(),
          :returns => atom() | {_, _},
          :run => {_, _},
          :skip_unknown_inputs => [any()],
          :touches_resources => [any()],
          :transaction? => boolean(),
          :type => :action
        },
    :arguments => map(),
    :context => map(),
    :domain => atom(),
    :errors => _,
    :invalid_keys => %MapSet{:map => MapSet.internal(_)},
    :params => map(),
    :resource => atom(),
    :tenant => _,
    :to_tenant => _,
    :valid? => boolean()
  },
  [{:domain, EveDmv.Api}]
)

will never return since the success typing is:
(atom() | %Ash.Query{}, Keyword.t()) ::
  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}
  | {:ok,
     [map()]
     | %{
         :__struct__ => Ash.Page.Keyset | Ash.Page.Offset,
         :count => integer(),
         :limit => integer(),
         :more? => boolean(),
         :rerun => {_, _},
         :results => [any()],
         :after => nil | binary(),
         :before => nil | binary(),
         :offset => integer()
       }}
  | {:ok,
     [map()]
     | %{
         :__struct__ => Ash.Page.Keyset | Ash.Page.Offset,
         :count => integer(),
         :limit => integer(),
         :more? => boolean(),
         :rerun => {_, _},
         :results => [any()],
         :after => nil | binary(),
         :before => nil | binary(),
         :offset => integer()
       },
     %Ash.Query{
       :__validated_for_action__ => atom(),
       :action => nil | map(),
       :action_failed? => boolean(),
       :after_action => [any()],
       :aggregates => map(),
       :arguments => map(),
       :around_transaction => _,
       :authorize_results => [any()],
       :before_action => [any()],
       :calculations => map(),
       :combination_of => [any()],
       :context => map(),
       :distinct => [any()],
       :distinct_sort => _,
       :domain => atom(),
       :errors => [any()],
       :filter => nil | map(),
       :invalid_keys => _,
       :limit => nil | non_neg_integer(),
       :load => [any()],
       :load_through => _,
       :lock => _,
       :offset => non_neg_integer(),
       :page => false | nil | [any()],
       :params => map(),
       :phase => :after_action | :before_action | :executing | :preparing,
       :resource => atom(),
       :select => nil | [any()],
       :sort => [any()],
       :sort_input_indices => _,
       :tenant => _,
       :timeout => nil | pos_integer(),
       :to_tenant => _,
       :valid? => boolean()
     }}

and the contract is
(Ash.Query.t() | Ash.Resource.t(), Keyword.t()) ::
  {:ok, [Ash.Resource.record()] | Ash.Page.page()} | {:error, term()}

________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:124:no_return
Function validate_api_key/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:124:no_return
Function validate_api_key/3 has no local return.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:126:call
The function call will not succeed.

Ash.read_one(
  %Ash.ActionInput{
    :action =>
      nil
      | %Ash.Resource.Actions.Action{
          :allow_nil? => boolean(),
          :arguments => [any()],
          :constraints => [any()],
          :description => nil | binary(),
          :name => atom(),
          :primary? => boolean(),
          :returns => atom() | {_, _},
          :run => {_, _},
          :skip_unknown_inputs => [any()],
          :touches_resources => [any()],
          :transaction? => boolean(),
          :type => :action
        },
    :arguments => map(),
    :context => map(),
    :domain => atom(),
    :errors => _,
    :invalid_keys => %MapSet{:map => MapSet.internal(_)},
    :params => map(),
    :resource => atom(),
    :tenant => _,
    :to_tenant => _,
    :valid? => boolean()
  },
  [{:domain, EveDmv.Api}]
)

will never return since the success typing is:
(atom() | %Ash.Query{}, Keyword.t()) ::
  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}
  | {:ok, _}
  | {:ok, _, _}

and the contract is
(resource_or_query :: Ash.Query.t() | Ash.Resource.t(), opts :: Keyword.t()) ::
  {:ok, Ash.Resource.record() | nil} | {:error, Ash.Error.t()}

________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:153:no_return
Function revoke_api_key/2 has no local return.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:155:call
The function call will not succeed.

Ash.read_one(
  %Ash.ActionInput{
    :action =>
      nil
      | %Ash.Resource.Actions.Action{
          :allow_nil? => boolean(),
          :arguments => [any()],
          :constraints => [any()],
          :description => nil | binary(),
          :name => atom(),
          :primary? => boolean(),
          :returns => atom() | {_, _},
          :run => {_, _},
          :skip_unknown_inputs => [any()],
          :touches_resources => [any()],
          :transaction? => boolean(),
          :type => :action
        },
    :arguments => map(),
    :context => map(),
    :domain => atom(),
    :errors => _,
    :invalid_keys => %MapSet{:map => MapSet.internal(_)},
    :params => map(),
    :resource => atom(),
    :tenant => _,
    :to_tenant => _,
    :valid? => boolean()
  },
  [{:domain, EveDmv.Api}]
)

will never return since the success typing is:
(atom() | %Ash.Query{}, Keyword.t()) ::
  {:error,
   %{
     :__exception__ => true,
     :__struct__ => atom(),
     :bread_crumbs => [any()],
     :class => :forbidden | :framework | :invalid | :unknown,
     :context => map(),
     :stacktrace => nil | map(),
     :vars => [any()],
     atom() => _
   }}
  | {:ok, _}
  | {:ok, _, _}

and the contract is
(resource_or_query :: Ash.Query.t() | Ash.Resource.t(), opts :: Keyword.t()) ::
  {:ok, Ash.Resource.record() | nil} | {:error, Ash.Error.t()}

________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:182:unused_fun
Function has_required_permissions?/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:194:unused_fun
Function key_expired?/1 will never be called.
________________________________________________________________________________
lib/eve_dmv/security/api_authentication.ex:200:unused_fun
Function update_last_used/2 will never be called.
________________________________________________________________________________
lib/eve_dmv/shared/ship_analysis.ex:60:no_return
Function analyze_role_specialization/1 has no local return.
________________________________________________________________________________
lib/eve_dmv/shared/ship_analysis.ex:106:call
The function call will not succeed.

EveDmv.Shared.ShipAnalysis.calculate_role_specialization(_role_percentages :: [any()])

will never return since the 1st arguments differ
from the success typing arguments:

(map())

________________________________________________________________________________
lib/eve_dmv/shared/ship_analysis.ex:203:pattern_match
The pattern can never match the type.

Pattern:
%Range{:first => 0, :last => 1, :step => 1}

Type:
non_neg_integer()

________________________________________________________________________________
lib/eve_dmv/shutdown/graceful_shutdown.ex:238:call
The function call will not succeed.

:os.set_signal(:sigint, :handle)

breaks the contract
(signal, option) :: :ok
when signal:
       :sighup
       | :sigquit
       | :sigabrt
       | :sigalrm
       | :sigterm
       | :sigusr1
       | :sigusr2
       | :sigchld
       | :sigstop
       | :sigtstp,
     option: :default | :handle | :ignore

________________________________________________________________________________
lib/eve_dmv/users/user.ex:361:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _inner_response}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:362:pattern_match
The pattern can never match the type.

Pattern:
_error = {:error, _}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:368:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:370:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
map().

________________________________________________________________________________
lib/eve_dmv/users/user.ex:389:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _inner_response}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:390:pattern_match
The pattern can never match the type.

Pattern:
_error = {:error, _}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:396:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/users/user.ex:398:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
map().

________________________________________________________________________________
lib/eve_dmv/users/user.ex:460:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _inner_response}

Type:
map()

________________________________________________________________________________
lib/eve_dmv/utils/dns_resolver.ex:64:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %HTTPoison.AsyncResponse{
     :body => _,
     :headers => [any()],
     :id => reference(),
     :request => %HTTPoison.Request{
       :body => _,
       :headers => _,
       :method => :delete | :get | :head | :options | :patch | :post | :put,
       :options => _,
       :params => _,
       :url => binary()
     },
     :request_url => _,
     :status_code => integer()
   }}


________________________________________________________________________________
lib/eve_dmv/workers/analysis_worker_pool.ex:228:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/workers/analysis_worker_pool.ex:571:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/workers/analysis_worker_pool.ex:587:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, _}

________________________________________________________________________________
lib/eve_dmv/workers/background_task_supervisor.ex:100:call
The function call will not succeed.

Task.await(_pid :: pid(), 1_800_000)

will never return since the success typing is:
(%Task{:owner => _, :ref => reference(), _ => _}, timeout()) :: any()

and the contract is
(t(), timeout()) :: term()

________________________________________________________________________________
lib/eve_dmv/workers/background_task_supervisor.ex:161:pattern_match_cov
The pattern
{:error, _reason}

can never match, because previous clauses completely cover the type
:ok | {:error, :not_found}.

________________________________________________________________________________
lib/eve_dmv/workers/cache_warming_worker.ex:419:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, %{:alliance_id => 123, :name => <<_::72>>}}

________________________________________________________________________________
lib/eve_dmv/workers/cache_warming_worker.ex:429:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, %{:name => <<_::48>>, :security_status => float()}}

________________________________________________________________________________
lib/eve_dmv/workers/cache_warming_worker.ex:439:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, %{:member_count => 1000, :name => <<_::64>>}}

________________________________________________________________________________
lib/eve_dmv/workers/cache_warming_worker.ex:449:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:
{:ok, %{:market_group_id => 456, :name => <<_::32>>}}

________________________________________________________________________________
lib/eve_dmv/workers/re_enrichment_worker.ex:286:pattern_match_cov
The pattern
variable_killmail_ids

can never match, because previous clauses completely cover the type
[].

________________________________________________________________________________
lib/eve_dmv/workers/ship_role_analysis_worker.ex:282:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
%{
  :command => float(),
  :dps => float(),
  :ewar => float(),
  :logistics => float(),
  :support => float(),
  :tackle => float()
}.

________________________________________________________________________________
lib/eve_dmv_web/components/api_error_handler.ex:34:pattern_match
The pattern can never match the type.

Pattern:
:info

Type:
:error | :warning

________________________________________________________________________________
lib/eve_dmv_web/components/api_error_handler.ex:57:pattern_match
The pattern can never match the type.

Pattern:
:info

Type:
:error | :warning

________________________________________________________________________________
lib/eve_dmv_web/components/battle_timeline_component.ex:538:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
number().

________________________________________________________________________________
lib/eve_dmv_web/controllers/api/api_keys_controller.ex:44:apply
Function application with arguments (
  _ ::
    {struct(),
     [
       %Ash.Notifier.Notification{
         :action => _,
         :actor => _,
         :changeset => _,
         :data => _,
         :domain => _,
         :for => _,
         :from => _,
         :metadata => _,
         :resource => _
       }
     ]}
    | struct()
) will never return since the 1st arguments differ
from the success typing arguments:

(nil | {:error, _})

________________________________________________________________________________
lib/eve_dmv_web/controllers/api/api_keys_controller.ex:45:pattern_match
The pattern can never match the type.

Pattern:
{:ok, _api_key}

Type:

  {struct(),
   [
     %Ash.Notifier.Notification{
       :action => _,
       :actor => _,
       :changeset => _,
       :data => _,
       :domain => _,
       :for => _,
       :from => _,
       :metadata => _,
       :resource => _
     }
   ]}
  | struct()


________________________________________________________________________________
lib/eve_dmv_web/controllers/api/api_keys_controller.ex:104:no_return
Function validate/2 has no local return.
________________________________________________________________________________
lib/eve_dmv_web/controllers/api/corporation_threat_controller.ex:35:pattern_match
The pattern can never match the type.

Pattern:
{:error, _}

Type:

  {:ok,
   %{
     :activity_metrics => %{
       :active_members => non_neg_integer(),
       :activity_trend => :decreasing | :increasing | :stable,
       :engagement_frequency => number(),
       :kills_per_day => number(),
       :prime_timezone => <<_::32, _::size(8)>>
     },
     :corporation => %{
       :corporation_id => _,
       :name => _,
       :ticker => binary(),
       :alliance_id => _,
       :alliance_name => _,
       :member_count => non_neg_integer()
     },
     :doctrine_analysis => %{
       :primary_doctrine => :small_gang | :unknown | map(),
       :analysis_metadata => map(),
       :corporation_id => _,
       :doctrine_certainty => number(),
       :doctrine_confidence => float(),
       :evolution_analysis => nil | map(),
       :fleet_compositions => [any()],
       :fleet_compositions_analyzed => non_neg_integer(),
       :member_analysis => nil | map(),
       :secondary_doctrine => nil | map(),
       :secondary_doctrines => [],
       :tactical_patterns => map(),
       :tactical_preferences => map(),
       :threat_assessment => map()
     },
     :doctrine_evolution => %{
       :time_periods => [any()],
       :adaptation_patterns => map(),
       :corporation_id => _,
       :doctrine_changes => [any(), ...],
       :stability_score => float(),
       :trend_predictions => [any(), ...]
     },
     :member_threats => %{
       :average_threat_score => number(),
       :threat_distribution => map(),
       :top_threats => [any()]
     },
     :summary => %{
       :average_member_threat => _,
       :doctrine_confidence => _,
       :key_capabilities => [any(), ...],
       :primary_doctrine => _,
       :recommendations => [any(), ...],
       :summary => <<_::64, _::size(8)>>,
       :threat_level => <<_::24, _::size(8)>>,
       :vulnerabilities => [any()]
     }
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:294:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :events => [any()],
     :metadata => map(),
     :recommendations => [any()],
     :summary => map(),
     :tactical_analysis => map()
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:420:pattern_match
The pattern can never match the type.

Pattern:
{:error, __reason}

Type:

  {:ok,
   %{
     :actual_performance => %{
       :damage_dealt => map(),
       :damage_taken => map(),
       :kills => non_neg_integer(),
       :module_activations => _,
       :movement_stats => map(),
       :time_on_field => integer()
     },
     :efficiency_metrics => %{
       :applied_vs_theoretical => map(),
       :dps_efficiency => map(),
       :isk_efficiency => map(),
       :status => :no_comparison_available,
       :survival_rating => float(),
       :tank_efficiency => map()
     },
     :expected_stats => %{
       :capacitor => map(),
       :dps => map(),
       :ehp => map(),
       :speed => map(),
       :status => :no_fitting_data
     },
     :recommendations => [<<_::64, _::size(8)>>],
     :ship_info => %{
       :character_id => _,
       :character_name => _,
       :fitting_source => _,
       :ship_name => binary(),
       :ship_type_id => nil | integer()
     }
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:509:pattern_match
The pattern can never match the type.

Pattern:
{:error, :battle_not_found}

Type:
{:error, :max_iterations_reached}

________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:601:pattern_match
The pattern can never match the type.

Pattern:
{:error, __reason}

Type:

  {:ok,
   %{
     :actual_performance => %{
       :damage_dealt => map(),
       :damage_taken => map(),
       :kills => non_neg_integer(),
       :module_activations => _,
       :movement_stats => map(),
       :time_on_field => integer()
     },
     :efficiency_metrics => %{
       :applied_vs_theoretical => map(),
       :dps_efficiency => map(),
       :isk_efficiency => map(),
       :status => :no_comparison_available,
       :survival_rating => float(),
       :tank_efficiency => map()
     },
     :expected_stats => %{
       :capacitor => map(),
       :dps => map(),
       :ehp => map(),
       :speed => map(),
       :status => :no_fitting_data
     },
     :recommendations => [<<_::64, _::size(8)>>],
     :ship_info => %{
       :character_id => _,
       :character_name => _,
       :fitting_source => _,
       :ship_name => binary(),
       :ship_type_id => nil | integer()
     }
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:1036:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type

  {:ok,
   %{
     :damage_metrics => %{
       :average_damage_per_kill => number(),
       :damage_by_ship_class => _,
       :damage_by_weapon_type => _,
       :dps_overall => number(),
       :final_blow_distribution => _,
       :overkill_analysis => map(),
       :total_damage_applied => _
     },
     :fleet_metrics => %{
       :average_fleet_age => 0,
       :ewar_usage => map(),
       :fleet_size_over_time => [any()],
       :force_multipliers => map(),
       :logistics_presence => map(),
       :ship_class_distribution => _,
       :ship_types_used => non_neg_integer()
     },
     :isk_metrics => %{
       :average_loss_value => number(),
       :isk_by_ship_class => _,
       :isk_efficiency_by_side => _,
       :most_expensive_loss => nil | map(),
       :top_isk_destroyers => [any()],
       :total_isk_destroyed => _
     },
     :overview => %{
       :average_pilots_per_kill => number(),
       :battle_type =>
         :duel
         | :extended_skirmish
         | :large_fleet
         | :medium_fleet
         | :small_fleet
         | :small_gang,
       :duration_minutes => _,
       :kills_per_minute => number(),
       :primary_system => _,
       :total_kills => _,
       :unique_alliances => non_neg_integer(),
       :unique_corporations => non_neg_integer(),
       :unique_pilots => non_neg_integer()
     },
     :side_comparison => %{
       :efficiency_comparison => map(),
       :message => <<_::320>>,
       :side_1 => map(),
       :side_2 => map()
     },
     :tactical_metrics => %{
       :coordination_score => map(),
       :engagement_range => map(),
       :focus_fire_efficiency => map(),
       :mobility_score => map(),
       :tactical_phases => [any()],
       :target_selection => map()
     }
   }}
.

________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:1050:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
{:ok, []}.

________________________________________________________________________________
lib/eve_dmv_web/live/battle_analysis_live.ex:1274:guard_fail
The guard clause:

when _ :: binary() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv_web/live/character_analysis/helpers/character_data_loader.ex:18:guard_fail
The guard clause:

when _ :: <<_::104>> === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv_web/live/character_search_live.ex:59:pattern_match
The pattern can never match the type.

Pattern:
{:error, __reason}

Type:

  {:ok,
   [
     %{
       :character_id => integer(),
       :name => binary(),
       :portrait_url => <<_::64, _::size(8)>>
     }
   ]}


________________________________________________________________________________
lib/eve_dmv_web/live/corporation_live.ex:47:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :activity_metrics => %{
       :active_members => non_neg_integer(),
       :activity_trend => :decreasing | :increasing | :stable,
       :engagement_frequency => number(),
       :kills_per_day => number(),
       :prime_timezone => <<_::32, _::size(8)>>
     },
     :corporation => %{
       :corporation_id => _,
       :name => _,
       :ticker => binary(),
       :alliance_id => _,
       :alliance_name => _,
       :member_count => non_neg_integer()
     },
     :doctrine_analysis => %{
       :primary_doctrine => :small_gang | :unknown | map(),
       :analysis_metadata => map(),
       :corporation_id => _,
       :doctrine_certainty => number(),
       :doctrine_confidence => float(),
       :evolution_analysis => nil | map(),
       :fleet_compositions => [any()],
       :fleet_compositions_analyzed => non_neg_integer(),
       :member_analysis => nil | map(),
       :secondary_doctrine => nil | map(),
       :secondary_doctrines => [],
       :tactical_patterns => map(),
       :tactical_preferences => map(),
       :threat_assessment => map()
     },
     :doctrine_evolution => %{
       :time_periods => [any()],
       :adaptation_patterns => map(),
       :corporation_id => _,
       :doctrine_changes => [any(), ...],
       :stability_score => float(),
       :trend_predictions => [any(), ...]
     },
     :member_threats => %{
       :average_threat_score => number(),
       :threat_distribution => map(),
       :top_threats => [any()]
     },
     :summary => %{
       :average_member_threat => _,
       :doctrine_confidence => _,
       :key_capabilities => [any(), ...],
       :primary_doctrine => _,
       :recommendations => [any(), ...],
       :summary => <<_::64, _::size(8)>>,
       :threat_level => <<_::24, _::size(8)>>,
       :vulnerabilities => [any()]
     }
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/corporation_live.ex:150:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :activity_metrics => %{
       :active_members => non_neg_integer(),
       :activity_trend => :decreasing | :increasing | :stable,
       :engagement_frequency => number(),
       :kills_per_day => number(),
       :prime_timezone => <<_::32, _::size(8)>>
     },
     :corporation => %{
       :corporation_id => _,
       :name => _,
       :ticker => binary(),
       :alliance_id => _,
       :alliance_name => _,
       :member_count => non_neg_integer()
     },
     :doctrine_analysis => %{
       :primary_doctrine => :small_gang | :unknown | map(),
       :analysis_metadata => map(),
       :corporation_id => _,
       :doctrine_certainty => number(),
       :doctrine_confidence => float(),
       :evolution_analysis => nil | map(),
       :fleet_compositions => [any()],
       :fleet_compositions_analyzed => non_neg_integer(),
       :member_analysis => nil | map(),
       :secondary_doctrine => nil | map(),
       :secondary_doctrines => [],
       :tactical_patterns => map(),
       :tactical_preferences => map(),
       :threat_assessment => map()
     },
     :doctrine_evolution => %{
       :time_periods => [any()],
       :adaptation_patterns => map(),
       :corporation_id => _,
       :doctrine_changes => [any(), ...],
       :stability_score => float(),
       :trend_predictions => [any(), ...]
     },
     :member_threats => %{
       :average_threat_score => number(),
       :threat_distribution => map(),
       :top_threats => [any()]
     },
     :summary => %{
       :average_member_threat => _,
       :doctrine_confidence => _,
       :key_capabilities => [any(), ...],
       :primary_doctrine => _,
       :recommendations => [any(), ...],
       :summary => <<_::64, _::size(8)>>,
       :threat_level => <<_::24, _::size(8)>>,
       :vulnerabilities => [any()]
     }
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/dashboard_live.ex:639:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type
binary().

________________________________________________________________________________
lib/eve_dmv_web/live/fleet_operations_live.ex:189:pattern_match
The pattern can never match the type.

Pattern:
_error = %EveDmv.Error{}

Type:

  {:error,
   :fleet_not_found
   | %EveDmv.Error{
       :code => atom(),
       :context => map(),
       :details => map(),
       :message => binary(),
       :stacktrace => nil | [any()]
     }}
  | {:ok, _}


________________________________________________________________________________
lib/eve_dmv_web/live/intelligence_dashboard_live.ex:126:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :analysis_timestamp => map(),
     :basic_analysis => map(),
     :character_id => _,
     :confidence_score => float(),
     :summary => <<_::64, _::size(8)>>,
     :threat_analysis => map(),
     :vetting_analysis => map()
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/intelligence_dashboard_live.ex:209:pattern_match
The pattern can never match the type.

Pattern:
{:error, _reason}

Type:

  {:ok,
   %{
     :analysis_timestamp => map(),
     :basic_analysis => map(),
     :character_id => _,
     :confidence_score => float(),
     :summary => <<_::64, _::size(8)>>,
     :threat_analysis => map(),
     :vetting_analysis => map()
   }}


________________________________________________________________________________
lib/eve_dmv_web/live/profile_live.ex:74:pattern_match_cov
The pattern
:variable_

can never match, because previous clauses completely cover the type

  {:ok,
   %{
     :analysis_period_days => number(),
     :calculated_at => %DateTime{
       :calendar => atom(),
       :day => pos_integer(),
       :hour => non_neg_integer(),
       :microsecond => {_, _},
       :minute => non_neg_integer(),
       :month => pos_integer(),
       :second => non_neg_integer(),
       :std_offset => integer(),
       :time_zone => binary(),
       :utc_offset => integer(),
       :year => integer(),
       :zone_abbr => binary()
     },
     :expertise_level => :beginner | :competent | :experienced | :expert | :novice,
     :preferred_roles => [any()],
     :ship_mastery => _,
     :specializations => map(),
     :total_killmails => non_neg_integer(),
     :note => <<_::240>>
   }}
.

________________________________________________________________________________
lib/eve_dmv_web/live/surveillance_dashboard_live.ex:1:pattern_match
The pattern can never match the type.

Pattern:
false

Type:
true

________________________________________________________________________________
lib/eve_dmv_web/live/surveillance_live.ex:38:call
The function call will not succeed.

EveDmvWeb.SurveillanceLive.NotificationService.get_unread_count(_user_id :: integer())

will never return since the success typing is:
(binary()) :: non_neg_integer()

and the contract is
(binary()) :: non_neg_integer()

________________________________________________________________________________
lib/eve_dmv_web/live/surveillance_live/profile_service.ex:178:pattern_match_cov
The pattern
variable_err

can never match, because previous clauses completely cover the type
%{
  :__exception__ => true,
  :__struct__ => atom(),
  :bread_crumbs => _,
  :class => _,
  :stacktrace => _,
  :vars => _,
  :context => map(),
  atom() => _
}.

________________________________________________________________________________
lib/eve_dmv_web/live/surveillance_live/profile_service.ex:181:pattern_match_cov
The pattern
variable_err

can never match, because previous clauses completely cover the type
%{
  :__exception__ => true,
  :__struct__ => atom(),
  :bread_crumbs => _,
  :class => _,
  :stacktrace => _,
  :vars => _,
  :context => map(),
  atom() => _
}.

________________________________________________________________________________
lib/eve_dmv_web/live/surveillance_live/profile_service.ex:184:pattern_match_cov
The pattern
variable_err

can never match, because previous clauses completely cover the type
%{
  :__exception__ => true,
  :__struct__ => atom(),
  :bread_crumbs => _,
  :class => _,
  :stacktrace => _,
  :vars => _,
  :context => map(),
  atom() => _
}.

________________________________________________________________________________
lib/eve_dmv_web/live/system_live.ex:320:guard_fail
The guard clause:

when _ :: number() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv_web/live/system_live.ex:322:guard_fail
The guard clause:

when _ :: number() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv_web/live/system_live.ex:323:guard_fail
The guard clause:

when _ :: number() === nil

can never succeed.

________________________________________________________________________________
lib/eve_dmv_web/plugs/api_auth.ex:117:no_return
Function authenticate_api_key/3 has no local return.
________________________________________________________________________________
lib/eve_dmv_web/plugs/api_auth.ex:170:unused_fun
Function format_api_error_message/1 will never be called.
________________________________________________________________________________
done (warnings were emitted)
Halting VM with exit status 2
