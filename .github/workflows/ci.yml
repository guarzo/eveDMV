name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: "1.17.2"
  OTP_VERSION: "27.0"

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eve_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Cache PLT files
      uses: actions/cache@v3
      with:
        path: priv/plts
        key: ${{ runner.os }}-plt-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-plt-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libbz2-dev

    - name: Install dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get

    - name: Check formatting
      run: mix format --check-formatted

    - name: Compile with warnings as errors
      run: mix compile --warnings-as-errors

    - name: Run Credo
      run: mix credo --strict

    - name: Security audit
      run: mix deps.audit

    - name: Run Dialyzer
      run: mix dialyzer

    - name: Setup database
      run: |
        mix ecto.create
        mix ecto.migrate
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/eve_tracker_test

    - name: Run tests
      run: mix test --cover
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/eve_tracker_test

    - name: Generate coverage report
      run: mix test.coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./cover/excoveralls.json
        flags: unittests
        name: codecov-umbrella

  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: eve-dmv:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  quality_gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: build_and_test
    if: always()
    
    steps:
    - name: Check build status
      run: |
        if [ "${{ needs.build_and_test.result }}" != "success" ]; then
          echo "Build and test job failed"
          exit 1
        fi
        echo "All quality gates passed!"