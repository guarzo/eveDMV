services:
  db:
    image: postgres:17-alpine
    container_name: eve_tracker_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eve_tracker_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: eve_tracker_redis
    command: ["redis-server", "--save", "900", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: eve_tracker_app
    volumes:
      - .:/workspace:cached
      - mix_deps:/workspace/deps
      - mix_build:/workspace/_build
    working_dir: /workspace
    environment:
      - MIX_ENV=dev
      - DATABASE_URL=ecto://postgres:postgres@db/eve_tracker_dev
      - REDIS_URL=redis://redis:6379
      - PHX_HOST=localhost
      - PHX_PORT=4010
    env_file:
      - .env
    ports:
      - "4010:4010"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true
    user: vscode
    # Let devcontainer postCreateCommand handle setup
    command: sleep infinity

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mix_deps:
    driver: local
  mix_build:
    driver: local 