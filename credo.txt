Checking 455 source files (this might take a while) ...

  Software Design                                                                                                                                                                                                                                                             
┃ 
┃ [D] → Found a TODO tag in a comment: # TODO: Implement HostileMovement domain event when needed
┃       lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:516:13 #(EveDmv.Contexts.Surveillance.Domain.ChainIntelligenceService.check_for_new_hostiles)
┃ [D] → Found a TODO tag in a comment: # TODO: Implement ChainActivityPrediction domain event when needed
┃       lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:542:9 #(EveDmv.Contexts.Surveillance.Domain.ChainIntelligenceService.generate_activity_predictions)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:240:10 #(EveDmv.Contexts.Surveillance.Domain.ChainIntelligenceService.handle_call)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/sql.ex:34:5 #(SQL.query!)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/sql.ex:23:5 #(SQL.query)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:427:21 #(EveDmv.Contexts.Surveillance.Domain.ChainIntelligenceService.handle_info)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/eve_dmv/contexts/surveillance/domain/chain_intelligence_service.ex:282:11 #(EveDmv.Contexts.Surveillance.Domain.ChainIntelligenceService.handle_cast)

  Code Readability                                                                                                                                                                                                                                                            
┃ 
┃ [R] ↗ Use a function call when a pipeline is only one function long.
┃       lib/eve_dmv/intelligence_engine/config.ex:124:7 #(EveDmv.IntelligenceEngine.Config.validate_config)
┃ [R] ↗ Use a function call when a pipeline is only one function long.
┃       lib/eve_dmv/intelligence/analyzers/member_activity_analyzer.ex:759:7 #(EveDmv.Intelligence.Analyzers.MemberActivityAnalyzer.identify_common_risk_factors)
┃ [R] → Use a pipeline instead of nested function calls.
┃       test/eve_dmv/killmails/killmail_raw_test.exs:36:16 #(EveDmv.Killmails.KillmailRawTest.create_partition_if_not_exists)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv_web/live/components/price_monitor_component.ex:77:3 #(EveDmvWeb.PriceMonitorComponent)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv_web/live/components/price_monitor_component.ex:51:3 #(EveDmvWeb.PriceMonitorComponent)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv_web/live/components/price_monitor_component.ex:36:3 #(EveDmvWeb.PriceMonitorComponent)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv_web/live/components/price_monitor_component.ex:29:3 #(EveDmvWeb.PriceMonitorComponent)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv_web/live/components/price_monitor_component.ex:13:3 #(EveDmvWeb.PriceMonitorComponent)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/workers/ui_task_supervisor.ex:39:3 #(EveDmv.Workers.UITaskSupervisor)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/workers/realtime_task_supervisor.ex:40:3 #(EveDmv.Workers.RealtimeTaskSupervisor)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/workers/background_task_supervisor.ex:40:3 #(EveDmv.Workers.BackgroundTaskSupervisor)
┃ [R] → Use a pipeline instead of nested function calls.
┃       lib/eve_dmv/intelligence/intelligence_scoring/fleet_scoring.ex:275:7 #(EveDmv.Intelligence.IntelligenceScoring.FleetScoring.assess_role_coverage)
┃ [R] → `with` contains only one <- clause and an `else` branch, consider using `case` instead
┃       lib/eve_dmv/intelligence/intelligence_scoring.ex:74:5 #(EveDmv.Intelligence.IntelligenceScoring.calculate_recruitment_fitness)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:63:3 #(EveDmv.Intelligence.Analyzers.FleetAssetManager)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:52:3 #(EveDmv.Intelligence.Analyzers.FleetAssetManager)
┃ [R] → `@impl true` should be `@impl MyBehaviour`.
┃       lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:49:3 #(EveDmv.Intelligence.Analyzers.FleetAssetManager)
┃ [R] ↘ There should be no more than 1 consecutive blank lines.
┃       lib/eve_dmv_web/controllers/error_html.ex:17 #(EveDmvWeb.ErrorHTML.render)
┃ [R] ↘ moduledoc must appear before behaviour
┃       lib/eve_dmv/workers/ui_task_supervisor.ex:4 #(EveDmv.Workers.UITaskSupervisor)
┃ [R] ↘ moduledoc must appear before behaviour
┃       lib/eve_dmv/workers/realtime_task_supervisor.ex:4 #(EveDmv.Workers.RealtimeTaskSupervisor)
┃ [R] ↘ moduledoc must appear before behaviour
┃       lib/eve_dmv/workers/background_task_supervisor.ex:4 #(EveDmv.Workers.BackgroundTaskSupervisor)
┃ [R] ↘ There should be no trailing white-space at the end of a line.
┃       lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:72:47 #(EveDmv.Intelligence.Analyzers.FleetAssetManager.validate_params)
┃ [R] ↘ There should be no trailing white-space at the end of a line.
┃       test/eve_dmv/shared/metrics_calculator_test.exs:167:1 #(EveDmv.Shared.MetricsCalculatorTest)
┃ [R] ↘ moduledoc must appear before behaviour
┃       lib/eve_dmv/intelligence/analyzers/fleet_asset_manager.ex:4 #(EveDmv.Intelligence.Analyzers.FleetAssetManager)

  Refactoring opportunities                                                                                                                                                                                                                                                   
┃ 
┃ [F] ↗ Unless conditions should avoid having an `else` block.
┃       lib/eve_dmv/intelligence/analyzers/member_activity_pattern_analyzer/timezone_analyzer.ex:34:5 #(EveDmv.Intelligence.Analyzers.MemberActivityPatternAnalyzer.TimezoneAnalyzer.analyze_timezone_patterns)
┃ [F] ↗ Avoid long quote blocks.
┃       test/support/ui_case.ex:26:5 #(EveDmv.UICase)
┃ [F] ↗ Avoid long quote blocks.
┃       test/support/intelligence_case.ex:11:5 #(EveDmv.IntelligenceCase)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv_web.ex:85:5 #(EveDmvWeb.html_helpers)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv_web.ex:41:5 #(EveDmvWeb.controller)
┃ [F] ↗ Avoid long quote blocks.
┃       test/support/conn_case.ex:12:5 #(EveDmvWeb.ConnCase)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv_web/components/reusable_components.ex:10:5 #(EveDmvWeb.Components.ReusableComponents.__using__)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv/error_handler.ex:43:5 #(EveDmv.ErrorHandler.__using__)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv/database/repository.ex:13:5 #(EveDmv.Database.Repository.__using__)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv/contexts/bounded_context.ex:39:5 #(EveDmv.Contexts.BoundedContext.__using__)
┃ [F] ↗ Avoid long quote blocks.
┃       lib/eve_dmv/intelligence/analyzer.ex:48:5 #(EveDmv.Intelligence.Analyzer.__using__)
┃ [F] → Pipe chain should start with a raw value.
┃       lib/eve_dmv/contexts/player_profile/formatters/character_display_formatter.ex:396:9 #(EveDmv.Contexts.PlayerProfile.Formatters.CharacterDisplayFormatter.has_significant_usage?)

Please report incorrect results: https://github.com/rrrene/credo/issues

Analysis took 17.7 seconds (3.8s to load, 13.8s running 84 checks on 455 files)
7368 mods/funs, found 12 refactoring opportunities, 23 code readability issues, 7 software design suggestions.

Use `mix credo explain` to explain issues, `mix credo --help` for options.
